{"version":3,"sources":["firebaseConfig.js","Firebase.ts","slices/appSlice.ts","reducer.ts","store.ts","components/Container/index.tsx","globals.ts","screens/Main/components/EmailWrapper.tsx","components/Loading/index.tsx","screens/Main/index.tsx","navRoutes.ts","theme/material.ts","ThemeProvider.tsx","screens/Experience/index.tsx","components/Card/index.tsx","screens/Skills/components/ListPoint.tsx","screens/Skills/components/SkillCard.tsx","screens/Skills/index.tsx","screens/Projects/components/GalleryStatus.tsx","screens/Projects/components/ImageGallery.tsx","screens/Projects/components/ProjectLink.tsx","screens/Projects/components/ProjectTile.tsx","screens/Projects/components/ProjectPreview.tsx","screens/Projects/components/ProjectsGrid.tsx","screens/Projects/index.tsx","screens/NotFound/index.tsx","components/NavWrapper/index.tsx","components/Header/components/Logo.tsx","components/Header/components/HeaderItem.tsx","components/Header/components/ThemeSelector.tsx","components/Header/index.tsx","components/Drawer/components/DrawerItem.tsx","components/Drawer/index.tsx","components/Navigation/index.tsx","hocs/withNavigation.tsx","App.tsx","index.js"],"names":["JSON","parse","process","firebase","firebaseConfig","firestore","appSlice","createSlice","name","initialState","darkTheme","aboutMe","experience","projects","skills","reducers","switchTheme","state","checkDarkTheme","action","payload","getAboutMe","getExperience","getSkills","key","data","getProjects","extraReducers","REHYDRATE","actions","selectDarkTheme","app","selectAboutMe","selectExperience","selectSkills","selectProjects","combineReducers","persistConfig","storage","persistedReducer","persistReducer","reducer","store","configureStore","devTools","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","persistedStore","persistStore","children","className","MY_EMAIL","SCREEN_TRANSITION_CONFIG","config","mass","tension","friction","opacity","from","marginTop","palette","useTheme","style","backgroundColor","secondary","light","color","text","primary","Button","onClick","navigator","clipboard","writeText","variant","endIcon","classes","root","CircularProgress","dispatch","useDispatch","useSelector","useLayoutEffect","a","collection","doc","get","info","animationProps","useSpring","Boolean","div","Container","Divider","component","EmailWrapper","Loading","MAIN","SKILLS","EXP","PROJECTS","RESUME","lightTheme","createMuiTheme","main","dark","typography","fontFamily","theme","ThemeProvider","minHeight","experienceData","docs","map","docData","elementContentStyle","WebkitBoxShadow","MozBoxShadow","boxShadow","iconStyle","fontSize","zIndex","subTitle","title","id","tools","tasks","date","contentStyle","contentArrowStyle","borderRight","icon","points","Card","point","ListPoint","forEach","console","log","technologies","others","databases","ui","SkillCard","images","currentImage","setCurrentImage","selected","gellryStatusClass","_","index","checked","scaleTransform","scale","interpolate","range","output","currentScale","transform","setSelectedProject","useState","galleryMainContainer","containerClass","imageContainerClass","galleryControllerClass","cursor","image","opacityValue","x","backgroundImage","IconButton","justifyContent","alignItems","label","size","length","GalleryStatus","renderIcon","link","href","project","description","github","emulator","ImageGallery","ProjectLink","iconProps","exit","opacityTransform","duration","Modal","open","selectedProject","projectsData","currentDoc","current","ProjectTile","ProjectPreview","ProjectsGrid","history","useHistory","push","startIcon","goBack","to","NavWrapper","opened","anchorEl","labelStyle","Popper","placement","disablePortal","Paper","Checkbox","onChange","openDrawer","themeOpened","setThemeOpened","anchor","setAnchor","Logo","HeaderItem","navRoutes","target","event","currentTarget","ThemeSelector","hideDrawer","drawerContainerStyle","left","DrawerItem","Switch","value","e","drawerOpened","setDrawerOpened","Header","Drawer","HigerComponent","props","Navigation","loading","persistor","exact","path","withNavigation","Main","Skills","Experience","Projects","NotFound","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"4aAAe,G,YAAA,eACVA,KAAKC,MAAMC,8VCIhBC,gBAAuBC,EAAeA,gBACtC,IAAMC,EAAYF,cCaZG,EAAWC,YAAY,CAC3BC,KAAM,MAENC,aAVE,CACFC,WAAW,EACXC,QAAS,KACTC,WAAY,KACZC,SAAU,KACVC,OAAQ,MAMRC,SAAU,CACRC,YADQ,SACIC,GACVA,EAAMP,WAAaO,EAAMP,WAE3BQ,eAJQ,SAIOD,EAAOE,GACpBF,EAAMP,UAAYS,EAAOC,SAE3BC,WAPQ,SAOGJ,EAAOE,GAChBF,EAAMN,QAAUQ,EAAOC,SAEzBE,cAVQ,SAUML,EAAOE,GACnBF,EAAML,WAAaO,EAAOC,SAE5BG,UAbQ,SAaEN,EAAOE,GACf,GAAIA,EAAOC,QAAS,CAAC,IAAD,EACID,EAAOC,QAArBI,EADU,EACVA,IAAKC,EADK,EACLA,KACbR,EAAMH,OAAN,2BACKG,EAAMH,QADX,kBAEGU,EAAMC,SAEJR,EAAMH,OAASK,EAAOC,SAE/BM,YAtBQ,SAsBIT,EAAOE,GACjBF,EAAMJ,SAAWM,EAAOC,UAG5BO,cAAc,eACXC,KAAY,SAACX,GACZ,OAAOA,O,EAYTX,EAASuB,QANXb,E,EAAAA,YACAE,E,EAAAA,eACAG,E,EAAAA,WACAC,E,EAAAA,cACAC,E,EAAAA,UACAG,E,EAAAA,YAGapB,IAAf,QAEawB,EAAkB,SAACb,GAAD,OAAsBA,EAAMc,IAAIrB,WAClDsB,EAAgB,SAACf,GAAD,OAAsBA,EAAMc,IAAIpB,SAChDsB,EAAmB,SAAChB,GAAD,OAAsBA,EAAMc,IAAInB,YACnDsB,EAAe,SAACjB,GAAD,OAAsBA,EAAMc,IAAIjB,QAC/CqB,EAAiB,SAAClB,GAAD,OAAsBA,EAAMc,IAAIlB,UCpE/CuB,cAAgB,CAC7BL,IAAKzB,I,yBCeD+B,EAAgB,CACpBb,IAAK,OACLc,aAGIC,EAAmBC,YAAeH,EAAeI,GAEjDC,EAAQC,YAAe,CAC3BF,QAASF,EACTK,UAAU,EACVC,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOrB,IAAWsB,IAAOC,IAASC,IAAOC,UAKnDC,EAAiBC,YAAab,GAE5BA,IC9BA,G,MAAA,YAAqC,IAAlCc,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,UAC1B,OAAO,yBAAKA,UAAS,4BAAuBA,IAAcD,K,4CCR/CE,EAAW,kCACXC,EAA2B,CACtCC,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,IAC3CC,QAAS,EACTC,KAAM,CAAED,QAAS,EAAGE,UAAW,KAC/BA,UAAW,GCDE,aAAO,IACZC,EAAYC,cAAZD,QAER,OACE,yBACEV,UAAU,0BACVY,MAAO,CAAEC,gBAAiBH,EAAQI,UAAUC,QAE5C,yBAAKf,UAAU,yBACb,uBAAGY,MAAO,CAAEI,MAAON,EAAQO,KAAKC,SAAWlB,UAAU,eAClDC,IAGL,kBAACkB,EAAA,EAAD,CACEC,QAAS,WACPC,UAAUC,UAAUC,UAAUtB,IAEhCuB,QAAQ,YACRC,QAAS,kBAAC,IAAD,CAAQT,MAAON,EAAQO,KAAKC,UACrCQ,QAAS,CAAEC,KAAM,cAAeF,QAAS,cACzCb,MAAO,CAAEC,gBAAiBH,EAAQI,UAAUC,W,kBCrBrC,I,OAAA,WACb,OACE,yBAAKf,UAAU,qBACb,kBAAC4B,GAAA,EAAD,CAAkBZ,MAAM,eCIf,cACb,IAAMa,EAAWC,cACX5E,EAAU6E,YAAYxD,GAC5ByD,2BAAgB,WACdH,EP0DwB,uCAAgB,WAAOA,GAAP,iBAAAI,EAAA,+EAElBrF,EAAUsF,WAAW,QAAQC,IAAI,WAAWC,MAF1B,OAElClF,EAFkC,OAGlCc,EAAYd,EAAQc,OAC1B6D,EAASjE,EAAU,OAACI,QAAD,IAACA,OAAD,EAACA,EAAMqE,OAJc,gDAMxCR,EAASjE,EAAW,OANoB,yDAAhB,yDOzDvB,CAACiE,IACJ,IAAMS,EAAiBC,YAAUrC,GACjC,OAAIsC,QAAQtF,GAER,kBAAC,IAASuF,IAAV,CAAc7B,MAAO0B,GACnB,kBAACI,EAAD,KACE,wCACA,kBAACA,EAAD,KACE,yBAAK1C,UAAU,iBAAiB9C,GAChC,kBAACyF,EAAA,EAAD,CACEnB,QAAQ,SACRE,QAAS,CAAEC,KAAM,kCACjBiB,UAAU,UAIhB,kBAACF,EAAD,KACE,+CACA,kBAACA,EAAD,KACE,yBAAK1C,UAAU,gBACb,uBAAGA,UAAU,gBAAb,YACA,kBAAC6C,EAAD,UAOH,kBAACC,GAAD,OC5CEC,GAAO,aACPC,GAAM,UAAMD,GAAN,WACNE,GAAG,UAAMF,GAAN,eACHG,GAAQ,UAAMH,GAAN,aACRI,GAAM,4I,mBCFNC,GAAaC,aAAe,CACvC3C,QAAS,CACPQ,QAAS,CACPoC,KAAM,WAERxC,UAAW,CACTC,MAAO,UACPuC,KAAM,OACNC,KAAM,WAERtC,KAAM,CACJC,QAAS,UACTJ,UAAW,YAGf0C,WAAY,CACVC,WAAY,WAIHxG,GAAYoG,aAAe,CACtC3C,QAAS,CACPQ,QAAS,CACPoC,KAAM,WAERxC,UAAW,CACTC,MAAO,UACPuC,KAAM,UACNC,KAAM,WAGRtC,KAAM,CACJC,QAAS,UACTJ,UAAW,YAGf0C,WAAY,CACVC,WAAY,WC7BD,eAA0B,IAAvB1D,EAAsB,EAAtBA,SAEV2D,EADc3B,YAAY1D,GACJpB,GAAYmG,GAChC1C,EAAYgD,EAAZhD,QACAO,EAASP,EAATO,KACR,OACE,kBAAC0C,GAAA,EAAkB,CAAED,SACnB,yBACE9C,MAAO,CACLI,MAAOC,EAAKC,QACZL,gBAAiBH,EAAQI,UAAUwC,KACnCM,UAAW,SAGZ7D,K,2BCXM,cAAO,IACZW,EAAYC,cAAZD,QACFmD,EAAiB9B,YAAYvD,GAC7BqD,EAAWC,cACjBE,2BAAgB,WACdH,EXgE2B,uCAAgB,WAAOA,GAAP,iBAAAI,EAAA,+EAElBrF,EAAUsF,WAAW,cAAcE,MAFjB,OAErCjF,EAFqC,OAGrC0G,EAAiB1G,EAAW2G,KAAKC,KAAI,SAACC,GAAD,OAAaA,EAAQhG,UAChE6D,EAAShE,EAAcgG,IAJoB,gDAM3ChC,EAAShE,EAAc,OANoB,yDAAhB,yDW/D1B,CAACgE,IAEJ,IAAMoC,EAAsB,CAC1BpD,gBAAiBH,EAAQI,UAAUyC,KACnCvC,MAAON,EAAQO,KAAKC,QACpBgD,gBAAiB,qCACjBC,aAAc,qCACdC,UAAW,sCAEPC,EAAY,CAChBxD,gBAAiBH,EAAQQ,QAAQoC,KACjCtC,MAAO,OACPsD,SAAU,QAEZ,OAAIT,EAEA,kBAACnB,EAAD,KACE,kBAAC,oBAAD,CAAkB9B,MAAO,CAAE2D,OAAQ,IAChCV,EAAeE,KAAI,SAAC5G,GAAgB,IAC3BqH,EAA4CrH,EAA5CqH,SAAUC,EAAkCtH,EAAlCsH,MAAOC,EAA2BvH,EAA3BuH,GAAIC,EAAuBxH,EAAvBwH,MAAOC,EAAgBzH,EAAhByH,MAAOC,EAAS1H,EAAT0H,KAC3C,OACE,kBAAC,2BAAD,CACE9G,IAAG,kBAAa2G,GAChB1E,UAAU,0DACV8E,aAAcb,EACdc,kBAAmB,CACjBC,YAAY,aAAD,OAAetE,EAAQQ,QAAQoC,OAE5CuB,KAAMA,EACNR,UAAWA,EACXY,KAAM,kBAAC,KAAD,OAEN,wBAAIjF,UAAU,mCAAmCyE,GACjD,wBAAIzE,UAAU,sCACXwE,GAEH,2BAAII,GACJ,uCACA,2BAAID,SAOJ,kBAAC7B,GAAD,OCvDD,I,OAAA,YAAqC,IAAlC/C,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,UAClBU,EAAYC,cAAZD,QACR,OACE,yBACEE,MAAO,CAAEC,gBAAiBH,EAAQI,UAAUyC,MAC5CvD,UAAS,yBAAoBA,IAE5BD,KCTQ,eAAuB,IAApB0E,EAAmB,EAAnBA,MACR/D,EAAYC,cAAZD,QACR,OACE,wBAAIV,UAAU,gBACZ,yBACEA,UAAU,gBACVY,MAAO,CAAEC,gBAAiBH,EAAQQ,QAAQoC,QAE5C,yBAAKtD,UAAU,wBAAwByE,KCL9B,eAAwC,EAArC1E,SAAsC,IAA5B0E,EAA2B,EAA3BA,MAAOS,EAAoB,EAApBA,OACjC,OACE,kBAACC,GAAD,CAAMnF,UAAU,eACd,wBAAIA,UAAU,iBAAiByE,GAC/B,wBAAIzE,UAAU,eACXkF,EAAOnB,KAAI,SAACqB,GAAD,OACV,kBAACC,GAAD,CAAWZ,MAAOW,EAAOrH,IAAKqH,UCLzB,I,OAAA,WACb,IAAM/H,EAAS0E,YAAYtD,GACrBoD,EAAWC,cACjBE,2BAAgB,WACdH,Ef6EuB,uCAAgB,WAAOA,GAAP,SAAAI,EAAA,+EAElBrF,EAAUsF,WAAW,UAAUE,MAFb,cAIhC0B,KAAKwB,SAAQ,SAACtB,GAAa,IAAD,EACzBhG,EAAI,UAAGgG,EAAQhG,cAAX,aAAG,EAAgBA,KAC7B6D,EAAS/D,EAAU,CAAEC,IAAKiG,EAAQU,GAAI1G,aAND,gDASvCuH,QAAQC,IAAR,MACA3D,EAAS/D,EAAU,OAVoB,yDAAhB,yDe5EtB,CAAC+D,IACJ,IAAMS,EAAiBC,YAAUrC,GAEjC,GACE7C,GACAA,EAAOoI,cACPpI,EAAOqI,QACPrI,EAAOsI,WACPtI,EAAOuI,GACP,CAAC,IACOH,EAAwCpI,EAAxCoI,aAAcC,EAA0BrI,EAA1BqI,OAAQC,EAAkBtI,EAAlBsI,UAAWC,EAAOvI,EAAPuI,GACzC,OACE,kBAAC,IAASnD,IAAV,CAAc7B,MAAO0B,GACnB,kBAACI,EAAD,KACE,sCACA,kBAACA,EAAD,CAAW1C,UAAU,oBACnB,kBAAC6F,GAAD,CAAWpB,MAAM,gBAAgBS,OAAQO,IACzC,kBAACI,GAAD,CAAWpB,MAAM,aAAaS,OAAQS,IACtC,kBAACE,GAAD,CAAWpB,MAAM,UAAUS,OAAQU,IACnC,kBAACC,GAAD,CAAWpB,MAAM,UAAUS,OAAQQ,OAKtC,OAAO,kBAAC5C,GAAD,Q,qCC7BD,eAAiE,IAA9DgD,EAA6D,EAA7DA,OAAQC,EAAqD,EAArDA,aAAcC,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,SAC/CvF,EAAYC,cAAZD,QACFwF,EAAoBD,EACtB,yCACA,iBACJ,OACE,yBAAKjG,UAAWkG,GACbJ,EAAO/B,KAAI,SAACoC,EAAGC,GACd,IAAMC,EAAUD,IAAUL,EACpBlF,EAAkBwF,EACpB3F,EAAQQ,QAAQoC,KAChB5C,EAAQI,UAAUC,MAIhBuF,EAHY/D,YAAU,CAC1BgE,MAAOF,EAAU,EAAI,IADfE,MAILC,YAAY,CAAEC,MAAO,CAAC,EAAG,GAAIC,OAAQ,CAAC,EAAG,QACzCF,aAAY,SAACG,GAAD,sBAA2BA,EAA3B,QACf,OACE,kBAAC,IAASlE,IAAV,CACE1E,IAAG,cAASqI,GACZhF,QAAS,kBAAM4E,EAAgBI,IAC/BpG,UAAS,+BACPqG,EAAU,+BAAiC,IAE7CzF,MAAO,CAAEC,kBAAiB+F,UAAWN,UCxBlC,eAAsD,IAAnDR,EAAkD,EAAlDA,OAAQG,EAA0C,EAA1CA,SAAUY,EAAgC,EAAhCA,mBAAgC,EAC1BC,mBAAS,GADiB,oBAC3Df,EAD2D,KAC7CC,EAD6C,KAE1DtF,EAAYC,cAAZD,QAEFqG,EAAuBd,EACzB,yDACA,yBACEe,EAAiBf,EACnB,+CACA,oBACEgB,EAAsBhB,EACxB,2DACA,0BACEiB,EAAyBjB,EAC3B,iDACA,qBACJ,OACE,yBAAKjG,UAAU,oBACb,yBAAKA,UAAW+G,GACd,yBACE/G,UAAWgH,EACXpG,MAAO,CAAEuG,OAASlB,EAAuB,GAAZ,WAC7B7E,QAAS,WACHyF,GAAoBA,MAG1B,yBAAK7G,UAAU,mBACZ8F,EAAO/B,KAAI,SAACqD,EAAOhB,GAAW,IAEvBiB,EADQ9E,YAAU,CAAE+E,EAAGvB,IAAiBK,EAAQ,EAAI,IAAlDkB,EACed,YAAY,CACjCC,MAAO,CAAC,EAAG,GACXC,OAAQ,CAAC,EAAG,KAEd,OACE,kBAAC,IAASjE,IAAV,CACE1E,IAAKqJ,EACLpH,UAAWiH,EACXrG,MAAO,CACL2G,gBAAgB,OAAD,OAASH,EAAT,KACf7G,QAAS8G,UAQrB,yBAAKrH,UAAWkH,GACd,kBAACM,GAAA,EAAD,CACExH,UAAU,iBACVY,MAAO,CACLC,gBAAiBH,EAAQI,UAAUC,MACnC0G,eAAgB,SAChBC,WAAY,UAEdtG,QAAS,WACH2E,EAAe,GAAGC,EAAgBD,EAAe,IAEvDrE,QAAS,CAAEiG,MAAO,gBAElB,kBAAC,KAAD,CAAeC,KAAM,GAAI5G,MAAON,EAAQO,KAAKC,WAE/C,kBAACsG,GAAA,EAAD,CACExH,UAAU,iBACVY,MAAO,CACLC,gBAAiBH,EAAQI,UAAUC,OAErCK,QAAS,WACH2E,EAAe,EAAID,EAAO+B,QAC5B7B,EAAgBD,EAAe,KAGnC,kBAAC,KAAD,CAAgB6B,KAAM,GAAI5G,MAAON,EAAQO,KAAKC,aAIpD,kBAAC4G,GAAkB,CAAEhC,SAAQE,kBAAiBD,eAAcE,e,SChFnD,eAAkC,IAA/B8B,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,KACpBtH,EAAYC,cAAZD,QACR,OACE,yBAAKV,UAAU,0BACZ+H,EAAW,CACVnH,MAAO,CACLI,MAAON,EAAQO,KAAKC,SAEtB0G,KAAM,KAER,uBACEK,KAAMD,EACNhI,UAAU,eACVY,MAAO,CAAEI,MAAON,EAAQQ,QAAQoC,OAE/B0E,KCVM,eAA6C,IAA1CE,EAAyC,EAAzCA,QAASrB,EAAgC,EAAhCA,mBACjBpC,EAAwDyD,EAAxDzD,MAAO0D,EAAiDD,EAAjDC,YAAaC,EAAoCF,EAApCE,OAAQnJ,EAA4BiJ,EAA5BjJ,MAAOoJ,EAAqBH,EAArBG,SAAUvC,EAAWoC,EAAXpC,OACrD,OACE,kBAACX,GAAD,CAAMnF,UAAU,qBACd,kBAACsI,GAAD,cACM,CAAExC,UADR,CAEEe,mBAAoB,kBAAMA,EAAmBqB,OAG/C,wBAAIlI,UAAU,gBAAgBoB,QAAS,kBAAMyF,EAAmBqB,KAC7DzD,GAEH,yBAAKzE,UAAU,uBAAuBmI,GACtC,yBAAKnI,UAAU,wBACb,kBAACuI,GAAD,CACEP,KAAMI,EACNL,WAAY,SAACS,GAAD,OAAe,kBAAC,KAAaA,MAE1CH,GACC,kBAACE,GAAD,CACEP,KAAMK,EACNN,WAAY,SAACS,GAAD,OAAe,kBAAC,KAAmBA,MAGlDvJ,GACC,kBAACsJ,GAAD,CACEP,KAAM/I,EACN8I,WAAY,SAACS,GAAD,OAAe,kBAAC,KAAWA,S,mBC5BpC,eAAyB,IAAtBvC,EAAqB,EAArBA,SAAUwC,EAAW,EAAXA,KAOpBC,EANcnG,YAAU,CAC5BhC,QAASiC,QAAQyD,GAAY,EAAI,EACjC9F,OAAQ,CACNwI,SAAU,OAHNpI,QAMyBiG,YAAY,CAC3CC,MAAO,CAAC,EAAG,GACXC,OAAQ,CAAC,EAAG,KAGd,OACE,kBAACkC,GAAA,EAAD,CAAOC,KAAmB,OAAb5C,EAAmBjG,UAAU,iBACxC,kBAAC,IAASyC,IAAV,CACEzC,UAAU,4BACVY,MAAO,CAAEL,QAASmI,IAEjBzC,GAAY,kBAACqC,GAAD,CAAcxC,OAAQG,EAASH,OAAQG,UAAQ,IAC5D,kBAACuB,GAAA,EAAD,CAAYpG,QAAS,kBAAMqH,KAAQ/G,QAAS,CAAEC,KAAM,iBAClD,kBAAC,KAAD,CAAKX,MAAM,OAAO4G,KAAM,SCxBnB,cAAO,IAAD,EAC2Bd,mBAAS,MADpC,oBACZgC,EADY,KACKjC,EADL,KAEbhF,EAAWC,cACjBE,2BAAgB,WACdH,ErB8FyB,uCAAgB,WAAOA,GAAP,iBAAAI,EAAA,+EAElBrF,EAAUsF,WAAW,YAAYE,MAFf,OAEnChF,EAFmC,OAInC2L,EAAe3L,EAAS0G,KAAKC,KAAI,SAACiF,GAAD,oBACrCtE,GAAIsE,EAAWtE,IACZsE,EAAWhL,WAGhB6D,EAAS5D,EAAY8K,IAToB,gDAWzClH,EAAS5D,EAAY,OAXoB,yDAAhB,yDqB7FxB,CAAC4D,IACJ,IAAMzE,EAAW2E,YAAYrD,GAC7B,OAAItB,EAEA,yBAAK4C,UAAU,iBACZ,aAAI5C,GAAU2G,KAAI,SAACkF,GAAD,OACjB,kBAACC,GAAD,eACEnL,IAAG,iBAAYkL,EAAQvE,IACvBwD,QAASe,GACL,CAAEpC,2BAGV,kBAACsC,GAAD,CACElD,SAAU6C,EACVL,KAAM,kBAAM5B,EAAmB,UAIzB,kBAAC/D,GAAD,OCzBD,cACb,IAAMR,EAAiBC,YAAUrC,GACjC,OACE,kBAAC,IAASuC,IAAV,CAAc7B,MAAO0B,GACnB,kBAACI,EAAD,KACE,wCACA,kBAACA,EAAD,KACE,kBAAC0G,GAAD,UCLK,I,OAAA,WAAO,IACZ1I,EAAYC,cAAZD,QACF2I,EAAUC,cAEhB,OACE,kBAAC5G,EAAD,KACE,yBAAK1C,UAAU,eACb,uBAAGA,UAAU,YAAb,OACA,wBAAIY,MAAO,CAAEI,MAAON,EAAQQ,QAAQoC,MAAQtD,UAAU,eAAtD,yBAGA,yBAAKA,UAAU,UACb,kBAACmB,EAAA,EAAD,CACEC,QAAS,WACPiI,EAAQE,KAAKxG,KAEf/C,UAAU,YACVwJ,UAAW,kBAAC,KAAD,MACXxI,MAAM,UACNQ,QAAQ,aAPV,QAWA,kBAACL,EAAA,EAAD,CACEC,QAAS,WACPiI,EAAQI,UAEVzJ,UAAU,YACVwJ,UAAW,kBAAC,KAAD,MACXxI,MAAM,UACNQ,QAAQ,aAPV,sBCtBK,eAA8B,IAA3BkI,EAA0B,EAA1BA,GAAI3J,EAAsB,EAAtBA,SACZW,EAAYC,cAAZD,QACR,OACE,kBAAC,IAAD,cAAU,CAAEgJ,MAAZ,CAAkB9I,MAAO,CAAEI,MAAON,EAAQO,KAAKC,WAC5CnB,ICTQ,cACb,OACE,kBAAC4J,GAAD,CAAYD,GAAI3G,IACd,yBAAK/C,UAAU,kBACb,yBAAKA,UAAU,aAAf,uBACA,yBAAKA,UAAU,cAAf,2B,kBCFO,eAA0B,IAAvBD,EAAsB,EAAtBA,SACRW,EAAYC,cAAZD,QAER,OACE,wBAAIV,UAAU,YAAYY,MAAO,CAAEI,MAAON,EAAQO,KAAKC,UACpDnB,I,8BCFQ,eAAkC,IAA/B6J,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,SAClB5M,EAAY8E,YAAY1D,GACxBwD,EAAWC,cACTpB,EAAYC,cAAZD,QACFoJ,EAAa,CAAE9I,MAAON,EAAQO,KAAKC,SACzC,OACE,kBAAC6I,GAAA,EAAD,CACElB,KAAMe,EACNI,UAAU,SACVH,SAAUA,EACVI,eAAe,EACfjK,UAAU,uBAEV,kBAACkK,GAAA,EAAD,CACElK,UAAU,2BACVY,MAAO,CAAEC,gBAAiBH,EAAQI,UAAUyC,OAE5C,yBAAKvD,UAAU,4BACb,kBAACmK,GAAA,EAAD,CACEzI,QAAS,CAAEC,KAAM,kBACjBX,MAAM,UACNqF,QAASpJ,EACTmN,SAAU,kBAAMvI,EAASpE,GAAe,OAE1C,uBAAGmD,MAAOkJ,GAAV,eAEF,yBAAK9J,UAAU,4BACb,kBAACmK,GAAA,EAAD,CACEnJ,MAAM,UACNU,QAAS,CAAEC,KAAM,kBACjB0E,SAAUpJ,EACVmN,SAAU,kBAAMvI,EAASpE,GAAe,OAE1C,uBAAGmD,MAAOkJ,GAAV,mBC3BK,eAA4B,IAAzBO,EAAwB,EAAxBA,WACR3J,EAAYC,cAAZD,QADgC,EAGFoG,oBAAS,GAHP,oBAGjCwD,EAHiC,KAGpBC,EAHoB,OAIZzD,mBAAc,MAJF,oBAIjC0D,EAJiC,KAIzBC,EAJyB,KAKxC,OACE,4BACEzK,UAAU,iBACVY,MAAO,CAAEC,gBAAiBH,EAAQI,UAAUyC,OAE5C,yBAAKvD,UAAU,oBACb,kBAACwH,GAAA,EAAD,CAAYpG,QAASiJ,EAAYrK,UAAU,eACzC,kBAAC,KAAD,CAAQ4H,KAAM,GAAI5G,MAAON,EAAQO,KAAKC,YAG1C,yBAAKlB,UAAU,yBACb,kBAAC0K,GAAD,OAEF,yBAAK1K,UAAU,QACb,wBAAIA,UAAU,aACZ,kBAAC2K,GAAD,KACE,kBAAChB,GAAD,CAAYD,GAAIkB,IAAhB,WAEF,kBAACD,GAAD,KACE,kBAAChB,GAAD,CAAYD,GAAIkB,IAAhB,eAEF,kBAACD,GAAD,KACE,kBAAChB,GAAD,CAAYD,GAAIkB,IAAhB,aAEF,kBAACD,GAAD,KACE,uBACE1C,KAAM2C,GACNC,OAAO,SACPjK,MAAO,CAAEI,MAAON,EAAQO,KAAKC,UAH/B,cAQF,kBAACyJ,GAAD,KACE,uBACE1C,KxBxDW,6BwByDXrH,MAAO,CAAEI,MAAON,EAAQO,KAAKC,SAC7B2J,OAAO,UAHT,WASF,kBAACF,GAAD,KACE,yBACEvJ,QAAS,SAAC0J,GACRL,EAAUK,EAAMC,eAChBR,GAAgBD,KAHpB,SAQA,kBAACU,GAAD,CAAepB,OAAQU,EAAaT,SAAUW,SClE3C,eAAsC,IAAnCzK,EAAkC,EAAlCA,SAAUkL,EAAwB,EAAxBA,WAClBvK,EAAYC,cAAZD,QACR,OACE,wBACEV,UAAU,cACVY,MAAO,CAAEI,MAAON,EAAQO,KAAKC,SAC7BE,QAAS6J,GAERlL,I,mBCYQ,eAAoC,IAAjC6J,EAAgC,EAAhCA,OAAQqB,EAAwB,EAAxBA,WAClBC,EAAuBtB,EAAS,GAAK,CAAEuB,KAAM,UAC7ClO,EAAY8E,YAAY1D,GACxBwD,EAAWC,cACTpB,EAAYC,cAAZD,QACR,OACE,yBACEV,UAAU,mBACVY,MAAK,aACHC,gBAAiBH,EAAQI,UAAUwC,MAChC4H,IAGL,yBAAKlL,UAAU,iBACb,yBAAKA,UAAU,8BACb,kBAACwH,GAAA,EAAD,CAAYpG,QAAS6J,GACnB,kBAAC,KAAD,CAAerD,KAAM,GAAI5G,MAAON,EAAQO,KAAKC,aAKnD,wBAAIlB,UAAU,eACZ,kBAACoL,GAAe,CAAEH,cAChB,kBAAC,KAAD,CACEjL,UAAU,cACV4H,KA3BM,GA4BN5G,MAAON,EAAQO,KAAKC,UAEtB,kBAACyI,GAAD,CAAYD,GAAIkB,IAAhB,WAEF,kBAACQ,GAAe,CAAEH,cAChB,kBAAC,KAAD,CACEjL,UAAU,cACV4H,KAnCM,GAoCN5G,MAAON,EAAQO,KAAKC,UAEtB,kBAACyI,GAAD,CAAYD,GAAIkB,IAAhB,eAEF,kBAACQ,GAAe,CAAEH,cAChB,kBAAC,KAAD,CACEjL,UAAU,cACV4H,KA3CM,GA4CN5G,MAAON,EAAQO,KAAKC,UAEtB,kBAACyI,GAAD,CAAYD,GAAIkB,IAAhB,aAEF,kBAACQ,GAAe,CAAEH,cAChB,kBAAC,KAAD,CACEjL,UAAU,cACV4H,KAnDM,GAoDN5G,MAAON,EAAQO,KAAKC,UAEtB,uBACE+G,KAAM2C,GACNC,OAAO,SACPjK,MAAO,CAAEI,MAAON,EAAQO,KAAKC,UAH/B,cAQF,kBAACkK,GAAe,CAAEH,cAChB,kBAAC,KAAD,CACEjL,UAAU,cACV4H,KAjEM,GAkEN5G,MAAON,EAAQO,KAAKC,UAEtB,uBAAG+G,K1B7FY,6B0B6FarH,MAAO,CAAEI,MAAON,EAAQO,KAAKC,UAAzD,WAIF,kBAACkK,GAAe,CAAEH,cAChB,kBAAC,KAAD,CACEjL,UAAU,cACV4H,KA3EM,GA4EN5G,MAAON,EAAQO,KAAKC,UAJxB,aAOE,kBAACmK,GAAA,EAAD,CACEC,MAAOrO,EACPF,KAAK,cACLiE,MAAM,UACNoJ,SAAU,SAACmB,EAAGlF,GACZxE,EAAStE,YCzGR,cAAO,IAAD,EACqBuJ,oBAAS,GAD9B,oBACZ0E,EADY,KACEC,EADF,KAGnB,OACE,6BACE,kBAACC,GAAD,CAAQrB,WAAY,kBAAMoB,GAAgB,MAC1C,kBAACE,GAAD,CAAQV,WAAY,kBAAMQ,GAAgB,IAAQ7B,OAAQ4B,MCPjD,YAACI,GACd,OAAO,SAACC,GACN,OACE,6BACE,kBAACC,GAAD,MACA,kBAACF,EAAmBC,MCOb,cACb,OACE,kBAAC,IAAD,CAAU5M,MAAOA,GACf,kBAAC,IAAD,CAAa8M,QAAS,KAAMC,UAAWnM,GACrC,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoM,OAAK,EAACC,KAAMnJ,GAAMH,UAAWuJ,GAAeC,MACnD,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAMlJ,GAAQJ,UAAWuJ,GAAeE,MACrD,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAMjJ,GAAKL,UAAWuJ,GAAeG,MAClD,kBAAC,IAAD,CACEL,OAAK,EACLC,KAAMhJ,GACNN,UAAWuJ,GAAeI,MAE5B,kBAAC,IAAD,CAAO3J,UAAW4J,WC1BhCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,GAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1590e898.chunk.js","sourcesContent":["export default {\n  ...JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG),\n};\n","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport firebaseConfig from \"./firebaseConfig\";\nfirebase.initializeApp(firebaseConfig.firebaseConfig);\nconst firestore = firebase.firestore();\n\nexport { firestore };\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState, AppThunk } from \"../store\";\nimport { REHYDRATE } from \"redux-persist/es/constants\";\nimport { firestore } from \"../Firebase\";\nimport { SkillsType, Project } from \"../types\";\n\nconst initialState: {\n  darkTheme: boolean;\n  aboutMe: null | string;\n  experience: null | any[];\n  projects: null | Project[];\n  skills: null | SkillsType;\n} = {\n  darkTheme: false,\n  aboutMe: null,\n  experience: null,\n  projects: null,\n  skills: null,\n};\nconst appSlice = createSlice({\n  name: \"app\",\n\n  initialState,\n  reducers: {\n    switchTheme(state) {\n      state.darkTheme = !state.darkTheme;\n    },\n    checkDarkTheme(state, action) {\n      state.darkTheme = action.payload;\n    },\n    getAboutMe(state, action) {\n      state.aboutMe = action.payload;\n    },\n    getExperience(state, action) {\n      state.experience = action.payload;\n    },\n    getSkills(state, action) {\n      if (action.payload) {\n        const { key, data } = action.payload;\n        state.skills = {\n          ...state.skills,\n          [key]: data,\n        };\n      } else state.skills = action.payload;\n    },\n    getProjects(state, action) {\n      state.projects = action.payload;\n    },\n  },\n  extraReducers: {\n    [REHYDRATE]: (state) => {\n      return state;\n    },\n  },\n});\n\nexport const {\n  switchTheme,\n  checkDarkTheme,\n  getAboutMe,\n  getExperience,\n  getSkills,\n  getProjects,\n} = appSlice.actions;\n\nexport default appSlice.reducer;\n\nexport const selectDarkTheme = (state: RootState) => state.app.darkTheme;\nexport const selectAboutMe = (state: RootState) => state.app.aboutMe;\nexport const selectExperience = (state: RootState) => state.app.experience;\nexport const selectSkills = (state: RootState) => state.app.skills;\nexport const selectProjects = (state: RootState) => state.app.projects;\n\nexport const fetchAboutMe = (): AppThunk => async (dispatch) => {\n  try {\n    const aboutMe = await firestore.collection(\"user\").doc(\"aboutMe\").get();\n    const data: any = aboutMe.data();\n    dispatch(getAboutMe(data?.info));\n  } catch (error) {\n    dispatch(getAboutMe(null));\n  }\n};\nexport const fetchExperience = (): AppThunk => async (dispatch) => {\n  try {\n    const experience = await firestore.collection(\"experience\").get();\n    const experienceData = experience.docs.map((docData) => docData.data());\n    dispatch(getExperience(experienceData));\n  } catch (error) {\n    dispatch(getExperience(null));\n  }\n};\n\nexport const fetchSkills = (): AppThunk => async (dispatch) => {\n  try {\n    const skills = await firestore.collection(\"skills\").get();\n\n    skills.docs.forEach((docData) => {\n      const data = docData.data()?.data;\n      dispatch(getSkills({ key: docData.id, data }));\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(getSkills(null));\n  }\n};\n\nexport const fetchProjects = (): AppThunk => async (dispatch) => {\n  try {\n    const projects = await firestore.collection(\"projects\").get();\n\n    const projectsData = projects.docs.map((currentDoc) => ({\n      id: currentDoc.id,\n      ...currentDoc.data(),\n    }));\n\n    dispatch(getProjects(projectsData));\n  } catch (error) {\n    dispatch(getProjects(null));\n  }\n};\n","import { combineReducers } from \"redux\";\nimport appSlice from \"./slices/appSlice\";\n\nexport default combineReducers({\n  app: appSlice,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  ThunkAction,\n  Action,\n} from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PURGE,\n  REGISTER,\n  PERSIST,\n} from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: true,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistedStore = persistStore(store);\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n","import React, { ReactNode } from \"react\";\nimport \"./style.css\";\n\ninterface Props {\n  children: ReactNode | ReactNode[];\n  className?: string;\n}\n\nexport default ({ children, className }: Props) => {\n  return <div className={`content-container ${className}`}>{children}</div>;\n};\n","export const MY_GITHUB = \"https://github.com/matiNap\";\nexport const MY_EMAIL = \"mateusz.napieralski04@gmail.com\";\nexport const SCREEN_TRANSITION_CONFIG = {\n  config: { mass: 5, tension: 500, friction: 80 },\n  opacity: 1,\n  from: { opacity: 0, marginTop: 1000 },\n  marginTop: 0,\n};\n","import React from \"react\";\nimport { useTheme, Button } from \"@material-ui/core\";\nimport { FaCopy } from \"react-icons/fa\";\nimport { MY_EMAIL } from \"../../../globals\";\n\nexport default () => {\n  const { palette } = useTheme();\n\n  return (\n    <div\n      className=\"email-wrapper-container\"\n      style={{ backgroundColor: palette.secondary.light }}\n    >\n      <div className=\"email-inner-container\">\n        <p style={{ color: palette.text.primary }} className=\"email-value\">\n          {MY_EMAIL}\n        </p>\n      </div>\n      <Button\n        onClick={() => {\n          navigator.clipboard.writeText(MY_EMAIL);\n        }}\n        variant=\"contained\"\n        endIcon={<FaCopy color={palette.text.primary} />}\n        classes={{ root: \"copy-button\", endIcon: \"copy-label\" }}\n        style={{ backgroundColor: palette.secondary.light }}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport \"./style.css\";\n\nexport default () => {\n  return (\n    <div className=\"loading-container\">\n      <CircularProgress color=\"primary\" />\n    </div>\n  );\n};\n","import React, { useLayoutEffect } from \"react\";\nimport Container from \"../../components/Container\";\nimport \"./style.css\";\nimport { Divider } from \"@material-ui/core\";\nimport EmailWrapper from \"./components/EmailWrapper\";\nimport { useSpring, animated } from \"react-spring\";\nimport { SCREEN_TRANSITION_CONFIG } from \"../../globals\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAboutMe, selectAboutMe } from \"../../slices/appSlice\";\nimport Loading from \"../../components/Loading\";\n\nexport default () => {\n  const dispatch = useDispatch();\n  const aboutMe = useSelector(selectAboutMe);\n  useLayoutEffect(() => {\n    dispatch(fetchAboutMe());\n  }, [dispatch]);\n  const animationProps = useSpring(SCREEN_TRANSITION_CONFIG);\n  if (Boolean(aboutMe)) {\n    return (\n      <animated.div style={animationProps}>\n        <Container>\n          <h1>About me</h1>\n          <Container>\n            <div className=\"about-me-text\">{aboutMe}</div>\n            <Divider\n              variant=\"middle\"\n              classes={{ root: \"content-divider public-divider\" }}\n              component=\"div\"\n            />\n          </Container>\n        </Container>\n        <Container>\n          <h1>Contact with me</h1>\n          <Container>\n            <div className=\"contact-info\">\n              <p className=\"contact-text\">Via mail</p>\n              <EmailWrapper />\n            </div>\n          </Container>\n        </Container>\n      </animated.div>\n    );\n  } else {\n    return <Loading />;\n  }\n};\n","export const MAIN = \"/portfolio\";\nexport const SKILLS = `${MAIN}/skills`;\nexport const EXP = `${MAIN}/experience`;\nexport const PROJECTS = `${MAIN}/projects`;\nexport const RESUME = `https://firebasestorage.googleapis.com/v0/b/portfolio-d8494.appspot.com/o/resume.pdf?alt=media&token=2955fa5a-0cd7-4113-a1a6-2d282fb5b94d`;\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const lightTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0089f2\",\n    },\n    secondary: {\n      light: \"#c6c6c6\",\n      main: \"#eee\",\n      dark: \"#ededed\",\n    },\n    text: {\n      primary: \"#2F2F2F\",\n      secondary: \"#F2F2F2\",\n    },\n  },\n  typography: {\n    fontFamily: \"Rubik\",\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0089f2\",\n    },\n    secondary: {\n      light: \"#595959\",\n      main: \"#3D3B3C\",\n      dark: \"#323031\",\n    },\n\n    text: {\n      primary: \"#F2F2F2\",\n      secondary: \"#2F2F2F\",\n    },\n  },\n  typography: {\n    fontFamily: \"Rubik\",\n  },\n});\n","import React, { ReactNode } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { darkTheme, lightTheme } from \"./theme/material\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkTheme } from \"./slices/appSlice\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport default ({ children }: Props) => {\n  const isDarkTheme = useSelector(selectDarkTheme);\n  const theme = isDarkTheme ? darkTheme : lightTheme;\n  const { palette } = theme;\n  const { text } = palette;\n  return (\n    <ThemeProvider {...{ theme }}>\n      <div\n        style={{\n          color: text.primary,\n          backgroundColor: palette.secondary.main,\n          minHeight: \"100%\",\n        }}\n      >\n        {children}\n      </div>\n    </ThemeProvider>\n  );\n};\n","import React, { useLayoutEffect } from \"react\";\nimport Container from \"../../components/Container\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from \"react-vertical-timeline-component\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport { useTheme } from \"@material-ui/core\";\nimport { RiReactjsLine } from \"react-icons/ri\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchExperience, selectExperience } from \"../../slices/appSlice\";\nimport Loading from \"../../components/Loading\";\n\nexport default () => {\n  const { palette } = useTheme();\n  const experienceData = useSelector(selectExperience);\n  const dispatch = useDispatch();\n  useLayoutEffect(() => {\n    dispatch(fetchExperience());\n  }, [dispatch]);\n\n  const elementContentStyle = {\n    backgroundColor: palette.secondary.dark,\n    color: palette.text.primary,\n    WebkitBoxShadow: \"0px 9px 41px -2px rgba(0,0,0,0.53)\",\n    MozBoxShadow: \"0px 9px 41px -2px rgba(0,0,0,0.53)\",\n    boxShadow: \"0px 9px 41px -2px rgba(0,0,0,0.53)\",\n  };\n  const iconStyle = {\n    backgroundColor: palette.primary.main,\n    color: \"#fff\",\n    fontSize: \"50px\",\n  };\n  if (experienceData) {\n    return (\n      <Container>\n        <VerticalTimeline style={{ zIndex: 0 }}>\n          {experienceData.map((experience) => {\n            const { subTitle, title, id, tools, tasks, date } = experience;\n            return (\n              <VerticalTimelineElement\n                key={`timeline${id}`}\n                className=\"vertical-timeline-element--work timeline-item-container\"\n                contentStyle={elementContentStyle}\n                contentArrowStyle={{\n                  borderRight: `7px solid ${palette.primary.main}`,\n                }}\n                date={date}\n                iconStyle={iconStyle}\n                icon={<RiReactjsLine />}\n              >\n                <h3 className=\"vertical-timeline-element-title\">{title}</h3>\n                <h4 className=\"vertical-timeline-element-subtitle\">\n                  {subTitle}\n                </h4>\n                <p>{tasks}</p>\n                <h3>Tools: </h3>\n                <p>{tools}</p>\n              </VerticalTimelineElement>\n            );\n          })}\n        </VerticalTimeline>\n      </Container>\n    );\n  } else return <Loading />;\n};\n","import React, { ReactNode } from \"react\";\nimport { useTheme } from \"@material-ui/core\";\nimport \"./style.css\";\n\ninterface Props {\n  children?: ReactNode | ReactNode[];\n  className?: string;\n}\n\nexport default ({ children, className }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <div\n      style={{ backgroundColor: palette.secondary.dark }}\n      className={`card-container ${className}`}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  title: string;\n}\n\nexport default ({ title }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <li className=\"skills-point\">\n      <div\n        className=\"skills-bullet\"\n        style={{ backgroundColor: palette.primary.main }}\n      />\n      <div className=\"skills-point-content\">{title}</div>\n    </li>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport Card from \"../../../components/Card\";\nimport ListPoint from \"./ListPoint\";\n\ninterface Props {\n  children?: ReactNode | ReactNode[];\n  title: string;\n  points: string[];\n}\n\nexport default ({ children, title, points }: Props) => {\n  return (\n    <Card className=\"skills-card\">\n      <h2 className=\"skills-header\">{title}</h2>\n      <ul className=\"skills-list\">\n        {points.map((point) => (\n          <ListPoint title={point} key={point} />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n","import React, { useLayoutEffect } from \"react\";\nimport Container from \"../../components/Container\";\nimport SkillCard from \"./components/SkillCard\";\nimport { useSpring, animated } from \"react-spring\";\nimport { SCREEN_TRANSITION_CONFIG } from \"../../globals\";\n\nimport \"./style.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectSkills, fetchSkills } from \"../../slices/appSlice\";\nimport Loading from \"../../components/Loading\";\n\nexport default () => {\n  const skills = useSelector(selectSkills);\n  const dispatch = useDispatch();\n  useLayoutEffect(() => {\n    dispatch(fetchSkills());\n  }, [dispatch]);\n  const animationProps = useSpring(SCREEN_TRANSITION_CONFIG);\n\n  if (\n    skills &&\n    skills.technologies &&\n    skills.others &&\n    skills.databases &&\n    skills.ui\n  ) {\n    const { technologies, others, databases, ui } = skills;\n    return (\n      <animated.div style={animationProps}>\n        <Container>\n          <h1>Skills</h1>\n          <Container className=\"skills-container\">\n            <SkillCard title=\"Technologies:\" points={technologies} />\n            <SkillCard title=\"Databases:\" points={databases} />\n            <SkillCard title=\"UI/UIX:\" points={ui} />\n            <SkillCard title=\"Others:\" points={others} />\n          </Container>\n        </Container>\n      </animated.div>\n    );\n  } else return <Loading />;\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\nimport { useSpring, animated } from \"react-spring\";\n\ninterface Props {\n  images: any[];\n  currentImage: number;\n  setCurrentImage: (index: number) => void;\n  selected?: boolean;\n}\n\nexport default ({ images, currentImage, setCurrentImage, selected }: Props) => {\n  const { palette } = useTheme();\n  const gellryStatusClass = selected\n    ? \"gallery-status gallery-status-selected\"\n    : \"gallery-status\";\n  return (\n    <div className={gellryStatusClass}>\n      {images.map((_, index) => {\n        const checked = index === currentImage;\n        const backgroundColor = checked\n          ? palette.primary.main\n          : palette.secondary.light;\n        const { scale } = useSpring({\n          scale: checked ? 1 : 0,\n        });\n        const scaleTransform = scale\n          .interpolate({ range: [0, 1], output: [1, 1.35] })\n          .interpolate((currentScale) => `scale(${currentScale})`);\n        return (\n          <animated.div\n            key={`sPtr${index}`}\n            onClick={() => setCurrentImage(index)}\n            className={`gallery-status-point ${\n              checked ? \"gallery-status-point-checked\" : \"\"\n            }`}\n            style={{ backgroundColor, transform: scaleTransform }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport { GoChevronRight, GoChevronLeft } from \"react-icons/go\";\nimport { useTheme, IconButton } from \"@material-ui/core\";\nimport GalleryStatus from \"./GalleryStatus\";\n\ninterface Props {\n  images: string[];\n  selected?: boolean;\n  setSelectedProject?: () => void;\n}\n\nexport default ({ images, selected, setSelectedProject }: Props) => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const { palette } = useTheme();\n\n  const galleryMainContainer = selected\n    ? \"gallery-main-container gallery-main-container-selected\"\n    : \"gallery-main-container\";\n  const containerClass = selected\n    ? \"gallery-container gallery-container-selected\"\n    : \"gallery-container\";\n  const imageContainerClass = selected\n    ? \"gallery-image-container gallery-image-container-selected\"\n    : \"gallery-image-container\";\n  const galleryControllerClass = selected\n    ? \"gallery-controller gallery-controller-selected\"\n    : \"gallery-controller\";\n  return (\n    <div className=\"gallery-selected\">\n      <div className={galleryMainContainer}>\n        <div\n          className={containerClass}\n          style={{ cursor: !selected ? \"pointer\" : \"\" }}\n          onClick={() => {\n            if (setSelectedProject) setSelectedProject();\n          }}\n        >\n          <div className=\"project-gallery\">\n            {images.map((image, index) => {\n              const { x } = useSpring({ x: currentImage === index ? 1 : 0 });\n              const opacityValue = x.interpolate({\n                range: [0, 1],\n                output: [0, 1],\n              });\n              return (\n                <animated.div\n                  key={image}\n                  className={imageContainerClass}\n                  style={{\n                    backgroundImage: `url(${image})`,\n                    opacity: opacityValue,\n                  }}\n                />\n              );\n            })}\n          </div>\n        </div>\n\n        <div className={galleryControllerClass}>\n          <IconButton\n            className=\"gallery-button\"\n            style={{\n              backgroundColor: palette.secondary.light,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onClick={() => {\n              if (currentImage > 0) setCurrentImage(currentImage - 1);\n            }}\n            classes={{ label: \"switch-icon\" }}\n          >\n            <GoChevronLeft size={50} color={palette.text.primary} />\n          </IconButton>\n          <IconButton\n            className=\"gallery-button\"\n            style={{\n              backgroundColor: palette.secondary.light,\n            }}\n            onClick={() => {\n              if (currentImage + 1 < images.length)\n                setCurrentImage(currentImage + 1);\n            }}\n          >\n            <GoChevronRight size={50} color={palette.text.primary} />\n          </IconButton>\n        </div>\n      </div>\n      <GalleryStatus {...{ images, setCurrentImage, currentImage, selected }} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  renderIcon: (props: any) => React.ReactNode;\n  link: string;\n}\n\nexport default ({ renderIcon, link }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <div className=\"project-link-container\">\n      {renderIcon({\n        style: {\n          color: palette.text.primary,\n        },\n        size: 25,\n      })}\n      <a\n        href={link}\n        className=\"project-link\"\n        style={{ color: palette.primary.main }}\n      >\n        {link}\n      </a>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Card from \"../../../components/Card\";\nimport ImageGallery from \"./ImageGallery\";\nimport { GoDeviceMobile } from \"react-icons/go\";\nimport { FiGithub, FiHome } from \"react-icons/fi\";\nimport ProjectLink from \"./ProjectLink\";\nimport { Project } from \"../../../types\";\n\ninterface Props {\n  project: Project;\n  setSelectedProject: (project: any) => void;\n}\n\nexport default ({ project, setSelectedProject }: Props) => {\n  const { title, description, github, store, emulator, images } = project;\n  return (\n    <Card className=\"project-tile-card\">\n      <ImageGallery\n        {...{ images }}\n        setSelectedProject={() => setSelectedProject(project)}\n      />\n\n      <h2 className=\"project-title\" onClick={() => setSelectedProject(project)}>\n        {title}\n      </h2>\n      <div className=\"project-description\">{description}</div>\n      <div className=\"project-source-links\">\n        <ProjectLink\n          link={github}\n          renderIcon={(iconProps) => <FiGithub {...iconProps} />}\n        />\n        {emulator && (\n          <ProjectLink\n            link={emulator}\n            renderIcon={(iconProps) => <GoDeviceMobile {...iconProps} />}\n          />\n        )}\n        {store && (\n          <ProjectLink\n            link={store}\n            renderIcon={(iconProps) => <FiHome {...iconProps} />}\n          />\n        )}\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Modal, IconButton } from \"@material-ui/core\";\nimport ImageGallery from \"./ImageGallery\";\nimport { Project } from \"../../../types\";\nimport { animated, useSpring } from \"react-spring\";\nimport { GoX } from \"react-icons/go\";\n\ninterface Props {\n  selected: Project | null;\n  exit: () => void;\n}\n\nexport default ({ selected, exit }) => {\n  const { opacity } = useSpring({\n    opacity: Boolean(selected) ? 1 : 0,\n    config: {\n      duration: 300,\n    },\n  });\n  const opacityTransform = opacity.interpolate({\n    range: [0, 1],\n    output: [0, 1],\n  });\n\n  return (\n    <Modal open={selected !== null} className=\"preview-modal\">\n      <animated.div\n        className=\"project-preview-container\"\n        style={{ opacity: opacityTransform }}\n      >\n        {selected && <ImageGallery images={selected.images} selected />}\n        <IconButton onClick={() => exit()} classes={{ root: \"preview-exit\" }}>\n          <GoX color=\"#fff\" size={50} />\n        </IconButton>\n      </animated.div>\n    </Modal>\n  );\n};\n","import React, { useState, useLayoutEffect } from \"react\";\nimport ProjectTile from \"./ProjectTile\";\nimport \"../style.css\";\nimport ProjectPreview from \"./ProjectPreview\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProjects, fetchProjects } from \"../../../slices/appSlice\";\nimport Loading from \"../../../components/Loading\";\n\nexport default () => {\n  const [selectedProject, setSelectedProject] = useState(null);\n  const dispatch = useDispatch();\n  useLayoutEffect(() => {\n    dispatch(fetchProjects());\n  }, [dispatch]);\n  const projects = useSelector(selectProjects);\n  if (projects) {\n    return (\n      <div className=\"projects-grid\">\n        {[...projects].map((current) => (\n          <ProjectTile\n            key={`project${current.id}`}\n            project={current}\n            {...{ setSelectedProject }}\n          />\n        ))}\n        <ProjectPreview\n          selected={selectedProject}\n          exit={() => setSelectedProject(null)}\n        />\n      </div>\n    );\n  } else return <Loading />;\n};\n","import React from \"react\";\nimport Container from \"../../components/Container\";\nimport ProjectsGrid from \"./components/ProjectsGrid\";\nimport { SCREEN_TRANSITION_CONFIG } from \"../../globals\";\nimport { useSpring, animated } from \"react-spring\";\n\nexport default () => {\n  const animationProps = useSpring(SCREEN_TRANSITION_CONFIG);\n  return (\n    <animated.div style={animationProps}>\n      <Container>\n        <h1>Projects</h1>\n        <Container>\n          <ProjectsGrid />\n        </Container>\n      </Container>\n    </animated.div>\n  );\n};\n","import React from \"react\";\nimport Container from \"../../components/Container\";\nimport { useTheme, Button } from \"@material-ui/core\";\nimport { FiHome, FiChevronLeft } from \"react-icons/fi\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./style.css\";\nimport { MAIN } from \"../../navRoutes\";\n\nexport default () => {\n  const { palette } = useTheme();\n  const history = useHistory();\n\n  return (\n    <Container>\n      <div className=\"nf-centered\">\n        <p className=\"nf-title\">404</p>\n        <h1 style={{ color: palette.primary.main }} className=\"nf-subtitle\">\n          Oops.. Page not found\n        </h1>\n        <div className=\"nf-nav\">\n          <Button\n            onClick={() => {\n              history.push(MAIN);\n            }}\n            className=\"nf-button\"\n            startIcon={<FiHome />}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Home\n          </Button>\n          <Button\n            onClick={() => {\n              history.goBack();\n            }}\n            className=\"nf-button\"\n            startIcon={<FiChevronLeft />}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Previous page\n          </Button>\n        </div>\n      </div>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  to: string;\n  children?: React.ReactNode | string | JSX.Element;\n}\n\nexport default ({ to, children }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <Link {...{ to }} style={{ color: palette.text.primary }}>\n      {children}\n    </Link>\n  );\n};\n","import React from \"react\";\nimport NavWrapper from \"../../NavWrapper\";\nimport { MAIN } from \"../../../navRoutes\";\n\nexport default () => {\n  return (\n    <NavWrapper to={MAIN}>\n      <div className=\"logo-container\">\n        <div className=\"logo-main\">Mateusz Napieralski</div>\n        <div className=\"logo-title\">Full stack developer</div>\n      </div>\n    </NavWrapper>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport default ({ children }: Props) => {\n  const { palette } = useTheme();\n\n  return (\n    <li className=\"menu-item\" style={{ color: palette.text.primary }}>\n      {children}\n    </li>\n  );\n};\n","import React from \"react\";\nimport { Checkbox, Popper, Paper, useTheme } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectDarkTheme, checkDarkTheme } from \"../../../slices/appSlice\";\n\ninterface Props {\n  opened: boolean;\n  anchorEl: any;\n}\n\nexport default ({ opened, anchorEl }: Props) => {\n  const darkTheme = useSelector(selectDarkTheme);\n  const dispatch = useDispatch();\n  const { palette } = useTheme();\n  const labelStyle = { color: palette.text.primary };\n  return (\n    <Popper\n      open={opened}\n      placement=\"bottom\"\n      anchorEl={anchorEl}\n      disablePortal={false}\n      className=\"theme-popper-shadow\"\n    >\n      <Paper\n        className=\"theme-selector-container\"\n        style={{ backgroundColor: palette.secondary.dark }}\n      >\n        <div className=\"checkbox-theme-container\">\n          <Checkbox\n            classes={{ root: \"checkbox-theme\" }}\n            color=\"primary\"\n            checked={darkTheme}\n            onChange={() => dispatch(checkDarkTheme(true))}\n          />\n          <p style={labelStyle}>Dark theme</p>\n        </div>\n        <div className=\"checkbox-theme-container\">\n          <Checkbox\n            color=\"primary\"\n            classes={{ root: \"checkbox-theme\" }}\n            checked={!darkTheme}\n            onChange={() => dispatch(checkDarkTheme(false))}\n          />\n          <p style={labelStyle}>Light theme</p>\n        </div>\n      </Paper>\n    </Popper>\n  );\n};\n","/* eslint-disable react/jsx-no-target-blank */\nimport React, { useState } from \"react\";\nimport Logo from \"./components/Logo\";\nimport \"./style.css\";\nimport { IconButton, useTheme } from \"@material-ui/core\";\nimport { MdMenu } from \"react-icons/md\";\nimport HeaderItem from \"./components/HeaderItem\";\nimport NavWrapper from \"../NavWrapper\";\nimport * as navRoutes from \"../../navRoutes\";\nimport { MY_GITHUB } from \"../../globals\";\nimport ThemeSelector from \"./components/ThemeSelector\";\n\ninterface Props {\n  openDrawer: () => void;\n}\n\nexport default ({ openDrawer }: Props) => {\n  const { palette } = useTheme();\n\n  const [themeOpened, setThemeOpened] = useState(false);\n  const [anchor, setAnchor] = useState<any>(null);\n  return (\n    <header\n      className=\"menu-container\"\n      style={{ backgroundColor: palette.secondary.dark }}\n    >\n      <div className=\"header-menu-icon\">\n        <IconButton onClick={openDrawer} className=\"menu-button\">\n          <MdMenu size={45} color={palette.text.primary} />\n        </IconButton>\n      </div>\n      <div className=\"header-logo-container\">\n        <Logo />\n      </div>\n      <div className=\"menu\">\n        <ul className=\"menu-list\">\n          <HeaderItem>\n            <NavWrapper to={navRoutes.SKILLS}>Skills</NavWrapper>\n          </HeaderItem>\n          <HeaderItem>\n            <NavWrapper to={navRoutes.EXP}>Experience</NavWrapper>\n          </HeaderItem>\n          <HeaderItem>\n            <NavWrapper to={navRoutes.PROJECTS}>Projects</NavWrapper>\n          </HeaderItem>\n          <HeaderItem>\n            <a\n              href={navRoutes.RESUME}\n              target=\"_blank\"\n              style={{ color: palette.text.primary }}\n            >\n              My resume\n            </a>\n          </HeaderItem>\n          <HeaderItem>\n            <a\n              href={MY_GITHUB}\n              style={{ color: palette.text.primary }}\n              target=\"_blank\"\n            >\n              Github\n            </a>\n          </HeaderItem>\n\n          <HeaderItem>\n            <div\n              onClick={(event) => {\n                setAnchor(event.currentTarget);\n                setThemeOpened(!themeOpened);\n              }}\n            >\n              Theme\n            </div>\n            <ThemeSelector opened={themeOpened} anchorEl={anchor} />\n          </HeaderItem>\n        </ul>\n      </div>\n    </header>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\ninterface Props {\n  children: React.ReactNode;\n  hideDrawer: () => void;\n}\n\nexport default ({ children, hideDrawer }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <li\n      className=\"drawer-item\"\n      style={{ color: palette.text.primary }}\n      onClick={hideDrawer}\n    >\n      {children}\n    </li>\n  );\n};\n","/* eslint-disable react/jsx-no-target-blank */\nimport React from \"react\";\nimport { GoChevronLeft } from \"react-icons/go\";\nimport {\n  FiGithub,\n  FiMonitor,\n  FiBook,\n  FiFileText,\n  FiCheckCircle,\n  FiMoon,\n} from \"react-icons/fi\";\nimport DrawerItem from \"./components/DrawerItem\";\nimport \"./style.css\";\nimport * as navRoutes from \"../../navRoutes\";\nimport NavWrapper from \"../NavWrapper\";\nimport { IconButton, Switch, useTheme } from \"@material-ui/core\";\nimport { switchTheme, selectDarkTheme } from \"../../slices/appSlice\";\nimport * as globals from \"../../globals\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\ninterface Props {\n  opened: boolean;\n  hideDrawer: () => void;\n}\n\nconst ICON_SIZE = 32;\n\nexport default ({ opened, hideDrawer }: Props) => {\n  const drawerContainerStyle = opened ? {} : { left: \"-150vw\" };\n  const darkTheme = useSelector(selectDarkTheme);\n  const dispatch = useDispatch();\n  const { palette } = useTheme();\n  return (\n    <div\n      className=\"drawer-container\"\n      style={{\n        backgroundColor: palette.secondary.main,\n        ...drawerContainerStyle,\n      }}\n    >\n      <div className=\"drawer-header\">\n        <div className=\"drawer-hide-icon-container\">\n          <IconButton onClick={hideDrawer}>\n            <GoChevronLeft size={50} color={palette.text.primary} />\n          </IconButton>\n        </div>\n      </div>\n\n      <ul className=\"drawer-list\">\n        <DrawerItem {...{ hideDrawer }}>\n          <FiCheckCircle\n            className=\"drawer-icon\"\n            size={ICON_SIZE}\n            color={palette.text.primary}\n          />\n          <NavWrapper to={navRoutes.SKILLS}>Skills</NavWrapper>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <FiBook\n            className=\"drawer-icon\"\n            size={ICON_SIZE}\n            color={palette.text.primary}\n          />\n          <NavWrapper to={navRoutes.EXP}>Experience</NavWrapper>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <FiMonitor\n            className=\"drawer-icon\"\n            size={ICON_SIZE}\n            color={palette.text.primary}\n          />\n          <NavWrapper to={navRoutes.PROJECTS}>Projects</NavWrapper>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <FiFileText\n            className=\"drawer-icon\"\n            size={ICON_SIZE}\n            color={palette.text.primary}\n          />\n          <a\n            href={navRoutes.RESUME}\n            target=\"_blank\"\n            style={{ color: palette.text.primary }}\n          >\n            My resume\n          </a>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <FiGithub\n            className=\"drawer-icon\"\n            size={ICON_SIZE}\n            color={palette.text.primary}\n          />\n          <a href={globals.MY_GITHUB} style={{ color: palette.text.primary }}>\n            Github\n          </a>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <FiMoon\n            className=\"drawer-icon\"\n            size={ICON_SIZE}\n            color={palette.text.primary}\n          />\n          Dark theme\n          <Switch\n            value={darkTheme}\n            name=\"switchTheme\"\n            color=\"primary\"\n            onChange={(e, checked) => {\n              dispatch(switchTheme());\n            }}\n          />\n        </DrawerItem>\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport Header from \"../Header\";\nimport Drawer from \"../Drawer\";\n\nexport default () => {\n  const [drawerOpened, setDrawerOpened] = useState(false);\n\n  return (\n    <div>\n      <Header openDrawer={() => setDrawerOpened(true)} />\n      <Drawer hideDrawer={() => setDrawerOpened(false)} opened={drawerOpened} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport Navigation from \"../components/Navigation\";\n\nexport default (HigerComponent: React.ComponentType<any>) => {\n  return (props) => {\n    return (\n      <div>\n        <Navigation />\n        <HigerComponent {...props} />\n      </div>\n    );\n  };\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store, { persistedStore } from \"./store\";\nimport Main from \"./screens/Main\";\nimport { MAIN, EXP, SKILLS, PROJECTS } from \"./navRoutes\";\n\nimport ThemeProvider from \"./ThemeProvider\";\nimport Experience from \"./screens/Experience\";\nimport Skills from \"./screens/Skills\";\nimport Projects from \"./screens/Projects\";\nimport NotFound from \"./screens/NotFound\";\nimport withNavigation from \"./hocs/withNavigation\";\n\nexport default () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistedStore}>\n        <ThemeProvider>\n          <Router>\n            <Switch>\n              <Route exact path={MAIN} component={withNavigation(Main)} />\n              <Route exact path={SKILLS} component={withNavigation(Skills)} />\n              <Route exact path={EXP} component={withNavigation(Experience)} />\n              <Route\n                exact\n                path={PROJECTS}\n                component={withNavigation(Projects)}\n              />\n              <Route component={NotFound} />\n            </Switch>\n          </Router>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}