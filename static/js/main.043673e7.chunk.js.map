{"version":3,"sources":["slices/appSlice.ts","reducer.ts","store.ts","components/Container/index.tsx","globals.ts","screens/Main/components/EmailWrapper.tsx","components/NavWrapper/index.tsx","navRoutes.ts","screens/Main/index.tsx","components/Header/components/Logo.tsx","components/Header/components/HeaderItem.tsx","components/Header/components/ThemeSelector.tsx","components/Header/index.tsx","components/Drawer/components/DrawerItem.tsx","components/Drawer/index.tsx","components/Navigation/index.tsx","theme/material.ts","ThemeProvider.tsx","screens/Experience/index.tsx","components/Card/index.tsx","screens/Skills/components/ListPoint.tsx","screens/Skills/components/SkillCard.tsx","screens/Skills/index.tsx","screens/Projects/components/GalleryStatus.tsx","screens/Projects/components/ImageGallery.tsx","screens/Projects/components/ProjectLink.tsx","screens/Projects/components/ProjectTile.tsx","screens/Projects/components/ProjectsGrid.tsx","screens/Projects/index.tsx","App.tsx","index.js"],"names":["appSlice","createSlice","name","initialState","darkTheme","reducers","REHYDRATE","reducer","prepare","console","log","payload","state","action","extraReducers","actions","switchTheme","checkDarkTheme","selectDarkTheme","app","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","devTools","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","persistedStore","persistStore","children","className","MY_EMAIL","SCREEN_TRANSITION_CONFIG","config","mass","tension","friction","opacity","from","marginTop","palette","useTheme","style","backgroundColor","secondary","light","color","text","primary","Button","onClick","navigator","clipboard","writeText","variant","endIcon","classes","root","to","EXP","process","animationProps","useSpring","div","Container","Divider","component","EmailWrapper","NavWrapper","main","opened","anchorEl","useSelector","dispatch","useDispatch","labelStyle","Popper","open","placement","disablePortal","Paper","dark","Checkbox","checked","onChange","openDrawer","useState","themeOpened","setThemeOpened","anchor","setAnchor","IconButton","size","Logo","HeaderItem","navRoutes","href","target","event","currentTarget","ThemeSelector","hideDrawer","drawerContainerStyle","left","DrawerItem","Switch","value","e","drawerOpened","setDrawerOpened","Header","Drawer","lightTheme","createMuiTheme","typography","fontFamily","theme","ThemeProvider","minHeight","elementContentStyle","WebkitBoxShadow","MozBoxShadow","boxShadow","iconStyle","fontSize","experienceData","experienceJSON","experience","zIndex","map","subTitle","title","id","tools","tasks","date","contentStyle","contentArrowStyle","borderRight","icon","points","Card","point","ListPoint","skills","data","SkillCard","technologies","databases","others","ui","images","currentImage","setCurrentImage","_","index","scaleTransform","scale","interpolate","range","output","currentScale","transform","transformX","x","currentX","width","length","image","backgroundImage","uri","GalleryStatus","renderIcon","link","project","description","github","emulator","ImageGallery","ProjectLink","iconProps","current","ProjectTile","ProjectsGrid","loading","persistor","Navigation","exact","path","Experience","Main","Skills","Projects","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.043673e7.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { REHYDRATE } from \"redux-persist/es/constants\";\n\nconst appSlice = createSlice({\n  name: \"app\",\n  initialState: {\n    darkTheme: false,\n  },\n  reducers: {\n    [REHYDRATE]: {\n      reducer: () => {},\n      prepare() {\n        console.log(\"PREPARED\");\n        return { payload: null };\n      },\n    },\n    switchTheme(state) {\n      state.darkTheme = !state.darkTheme;\n    },\n    checkDarkTheme(state, action) {\n      state.darkTheme = action.payload;\n    },\n  },\n  extraReducers: {\n    [REHYDRATE]: (state) => {\n      return state;\n    },\n  },\n});\n\nexport const { switchTheme, checkDarkTheme } = appSlice.actions;\n\nexport const selectDarkTheme = (state: RootState) => state.app.darkTheme;\n\nexport default appSlice.reducer;\n","import { combineReducers } from \"redux\";\nimport appSlice from \"./slices/appSlice\";\n\nexport default combineReducers({\n  app: appSlice,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PURGE,\n  REGISTER,\n  PERSIST,\n} from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: true,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistedStore = persistStore(store);\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\n","import React, { ReactNode } from \"react\";\nimport \"./style.css\";\n\ninterface Props {\n  children: ReactNode | ReactNode[];\n  className?: string;\n}\n\nexport default ({ children, className }: Props) => {\n  return <div className={`content-container ${className}`}>{children}</div>;\n};\n","export const MY_GITHUB = \"https://github.com/matiNap\";\nexport const MY_EMAIL = \"mateusz.napieralski04@gmail.com\";\nexport const SCREEN_TRANSITION_CONFIG = {\n  config: { mass: 5, tension: 500, friction: 80 },\n  opacity: 1,\n  from: { opacity: 0, marginTop: 1000 },\n  marginTop: 0,\n};\n","import React from \"react\";\nimport { useTheme, Button } from \"@material-ui/core\";\nimport { FaCopy } from \"react-icons/fa\";\nimport { MY_EMAIL } from \"../../../globals\";\n\nexport default () => {\n  const { palette } = useTheme();\n\n  return (\n    <div\n      className=\"email-wrapper-container\"\n      style={{ backgroundColor: palette.secondary.light }}\n    >\n      <div className=\"email-inner-container\">\n        <p style={{ color: palette.text.primary }}>{MY_EMAIL}</p>\n      </div>\n      <Button\n        onClick={() => {\n          navigator.clipboard.writeText(MY_EMAIL);\n        }}\n        variant=\"contained\"\n        endIcon={<FaCopy color={palette.text.primary} />}\n        classes={{ root: \"copy-button\", endIcon: \"copy-label\" }}\n        style={{ backgroundColor: palette.secondary.light }}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  to: string;\n  children?: React.ReactNode | string | JSX.Element;\n}\n\nexport default ({ to, children }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <Link {...{ to }} style={{ color: palette.text.primary }}>\n      {children}\n    </Link>\n  );\n};\n","export const MAIN = \"/\";\nexport const CHAT = \"/chat\";\nexport const SKILLS = \"/skills\";\nexport const EXP = \"/experience\";\nexport const PROJECTS = \"/projects\";\nexport const RESUME = `${process.env.PUBLIC_URL}/resume.pdf`;\n","import React from \"react\";\nimport Container from \"../../components/Container\";\nimport \"./style.css\";\nimport { Divider, useTheme } from \"@material-ui/core\";\nimport EmailWrapper from \"./components/EmailWrapper\";\nimport NavWrapper from \"../../components/NavWrapper\";\nimport * as navRoutes from \"../../navRoutes\";\nimport { useSpring, animated } from \"react-spring\";\nimport { SCREEN_TRANSITION_CONFIG } from \"../../globals\";\n\nexport default () => {\n  const { palette } = useTheme();\n  const animationProps = useSpring(SCREEN_TRANSITION_CONFIG);\n  return (\n    <animated.div style={animationProps}>\n      <Container>\n        <h1>About me</h1>\n        <Container>\n          <div className=\"about-me-text\">\n            I am 2 years experienced full stack developer with 3 years\n            experience of React and 2 years experience of React Native. I am\n            experienced in creating minimal viuable products and leading small\n            teams. To applications I also use Firebase and for backend I like\n            use GrpahQL(TypeGrpahql, TypeORM). I like work with team, creating\n            challenging projects and solving problems. I can think critically\n            and admit a mistake if I have commited it.\n          </div>\n          <Divider\n            variant=\"middle\"\n            classes={{ root: \"content-divider public-divider\" }}\n            component=\"div\"\n          />\n        </Container>\n      </Container>\n      <Container>\n        <h1>Contact with me</h1>\n        <Container>\n          <div className=\"contact-info\">\n            <p className=\"contact-text\">Via mail</p>\n            <EmailWrapper />\n            <p className=\"contact-or\">or</p>\n            <div className=\"contact-chat-container\">\n              <p className=\"contact-text\">Text me</p>\n              <NavWrapper to={navRoutes.CHAT}>\n                <p\n                  className=\"contact-chat-link contact-text\"\n                  style={{ color: palette.primary.main }}\n                >\n                  here\n                </p>\n              </NavWrapper>\n            </div>\n          </div>\n        </Container>\n      </Container>\n    </animated.div>\n  );\n};\n","import React from \"react\";\nimport NavWrapper from \"../../NavWrapper\";\nimport { MAIN } from \"../../../navRoutes\";\n\nexport default () => {\n  return (\n    <NavWrapper to={MAIN}>\n      <div className=\"logo-container\">\n        <div className=\"logo-main\">Mateusz Napieralski</div>\n        <div className=\"logo-title\">Full stack developer</div>\n      </div>\n    </NavWrapper>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport default ({ children }: Props) => {\n  const { palette } = useTheme();\n\n  return (\n    <li className=\"menu-item\" style={{ color: palette.text.primary }}>\n      {children}\n    </li>\n  );\n};\n","import React from \"react\";\nimport { Checkbox, Popper, Paper, useTheme } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectDarkTheme, checkDarkTheme } from \"../../../slices/appSlice\";\n\ninterface Props {\n  opened: boolean;\n  anchorEl: any;\n}\n\nexport default ({ opened, anchorEl }: Props) => {\n  const darkTheme = useSelector(selectDarkTheme);\n  const dispatch = useDispatch();\n  const { palette } = useTheme();\n  const labelStyle = { color: palette.text.primary };\n  return (\n    <Popper\n      open={opened}\n      placement=\"bottom\"\n      anchorEl={anchorEl}\n      disablePortal={false}\n      className=\"theme-popper-shadow\"\n    >\n      <Paper\n        className=\"theme-selector-container\"\n        style={{ backgroundColor: palette.secondary.dark }}\n      >\n        <div className=\"checkbox-theme-container\">\n          <Checkbox\n            classes={{ root: \"checkbox-theme\" }}\n            color=\"primary\"\n            checked={darkTheme}\n            onChange={() => dispatch(checkDarkTheme(true))}\n          />\n          <p style={labelStyle}>Dark theme</p>\n        </div>\n        <div className=\"checkbox-theme-container\">\n          <Checkbox\n            color=\"primary\"\n            classes={{ root: \"checkbox-theme\" }}\n            checked={!darkTheme}\n            onChange={() => dispatch(checkDarkTheme(false))}\n          />\n          <p style={labelStyle}>Light theme</p>\n        </div>\n      </Paper>\n    </Popper>\n  );\n};\n","/* eslint-disable react/jsx-no-target-blank */\nimport React, { useState } from \"react\";\nimport Logo from \"./components/Logo\";\nimport \"./style.css\";\nimport { IconButton, useTheme } from \"@material-ui/core\";\nimport { MdMenu } from \"react-icons/md\";\nimport HeaderItem from \"./components/HeaderItem\";\nimport NavWrapper from \"../NavWrapper\";\nimport * as navRoutes from \"../../navRoutes\";\nimport { MY_GITHUB } from \"../../globals\";\nimport ThemeSelector from \"./components/ThemeSelector\";\n\ninterface Props {\n  openDrawer: () => void;\n}\n\nexport default ({ openDrawer }: Props) => {\n  const { palette } = useTheme();\n\n  const [themeOpened, setThemeOpened] = useState(false);\n  const [anchor, setAnchor] = useState<any>(null);\n  return (\n    <header\n      className=\"menu-container\"\n      style={{ backgroundColor: palette.secondary.dark }}\n    >\n      <div className=\"header-menu-icon\">\n        <IconButton onClick={openDrawer}>\n          <MdMenu size={50} color={palette.text.primary} />\n        </IconButton>\n      </div>\n      <div className=\"header-logo-container\">\n        <Logo />\n      </div>\n      <div className=\"menu\">\n        <ul className=\"menu-list\">\n          <HeaderItem>\n            <NavWrapper to={navRoutes.SKILLS}>Skills</NavWrapper>\n          </HeaderItem>\n          <HeaderItem>\n            <NavWrapper to={navRoutes.EXP}>Experience</NavWrapper>\n          </HeaderItem>\n          <HeaderItem>\n            <NavWrapper to={navRoutes.PROJECTS}>Projects</NavWrapper>\n          </HeaderItem>\n          <HeaderItem>\n            <a\n              href={`${process.env.PUBLIC_URL}/resume.pdf`}\n              target=\"_blank\"\n              style={{ color: palette.text.primary }}\n            >\n              My resume\n            </a>\n          </HeaderItem>\n          <HeaderItem>\n            <a href={MY_GITHUB} style={{ color: palette.text.primary }}>\n              Github\n            </a>\n          </HeaderItem>\n\n          <HeaderItem>\n            <div\n              onClick={(event) => {\n                setAnchor(event.currentTarget);\n                setThemeOpened(!themeOpened);\n              }}\n            >\n              Theme\n            </div>\n            <ThemeSelector opened={themeOpened} anchorEl={anchor} />\n          </HeaderItem>\n        </ul>\n      </div>\n    </header>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\ninterface Props {\n  children: React.ReactNode;\n  hideDrawer: () => void;\n}\n\nexport default ({ children, hideDrawer }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <li\n      className=\"drawer-item\"\n      style={{ color: palette.text.primary }}\n      onClick={hideDrawer}\n    >\n      {children}\n    </li>\n  );\n};\n","import React from \"react\";\nimport { GoChevronLeft } from \"react-icons/go\";\nimport DrawerItem from \"./components/DrawerItem\";\nimport \"./style.css\";\nimport * as navRoutes from \"../../navRoutes\";\nimport NavWrapper from \"../NavWrapper\";\nimport { IconButton, Switch, useTheme } from \"@material-ui/core\";\nimport { switchTheme, selectDarkTheme } from \"../../slices/appSlice\";\nimport * as globals from \"../../globals\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\ninterface Props {\n  opened: boolean;\n  hideDrawer: () => void;\n}\n\nexport default ({ opened, hideDrawer }: Props) => {\n  const drawerContainerStyle = opened ? {} : { left: \"-150vw\" };\n  const darkTheme = useSelector(selectDarkTheme);\n  const dispatch = useDispatch();\n  const { palette } = useTheme();\n  return (\n    <div\n      className=\"drawer-container\"\n      style={{\n        backgroundColor: palette.secondary.main,\n        ...drawerContainerStyle,\n      }}\n    >\n      <div className=\"drawer-header\">\n        <div className=\"drawer-hide-icon-container\">\n          <IconButton onClick={hideDrawer}>\n            <GoChevronLeft size={50} color={palette.text.primary} />\n          </IconButton>\n        </div>\n      </div>\n\n      <ul className=\"drawer-list\">\n        <DrawerItem {...{ hideDrawer }}>\n          <NavWrapper to={navRoutes.SKILLS}>Skills</NavWrapper>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <NavWrapper to={navRoutes.EXP}>Experience</NavWrapper>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <NavWrapper to={navRoutes.PROJECTS}>Projects</NavWrapper>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>My resume</DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <a href={globals.MY_GITHUB} style={{ color: palette.text.primary }}>\n            Github\n          </a>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          Dark theme\n          <Switch\n            value={darkTheme}\n            name=\"switchTheme\"\n            color=\"primary\"\n            onChange={(e, checked) => {\n              dispatch(switchTheme());\n            }}\n          />\n        </DrawerItem>\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport Header from \"../Header\";\nimport Drawer from \"../Drawer\";\n\nexport default () => {\n  const [drawerOpened, setDrawerOpened] = useState(false);\n\n  return (\n    <div>\n      <Header openDrawer={() => setDrawerOpened(true)} />\n      <Drawer hideDrawer={() => setDrawerOpened(false)} opened={drawerOpened} />\n    </div>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const lightTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0089f2\",\n    },\n    secondary: {\n      light: \"#ededed\",\n      main: \"#eee\",\n      dark: \"#ededed\",\n    },\n    text: {\n      primary: \"#2F2F2F\",\n      secondary: \"#F2F2F2\",\n    },\n  },\n  typography: {\n    fontFamily: \"Rubik\",\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0089f2\",\n    },\n    secondary: {\n      light: \"#595959\",\n      main: \"#3D3B3C\",\n      dark: \"#323031\",\n    },\n\n    text: {\n      primary: \"#F2F2F2\",\n      secondary: \"#2F2F2F\",\n    },\n  },\n  typography: {\n    fontFamily: \"Rubik\",\n  },\n});\n","import React, { ReactNode } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { darkTheme, lightTheme } from \"./theme/material\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkTheme } from \"./slices/appSlice\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport default ({ children }: Props) => {\n  const isDarkTheme = useSelector(selectDarkTheme);\n  const theme = isDarkTheme ? darkTheme : lightTheme;\n  const { palette } = theme;\n  const { text } = palette;\n  return (\n    <ThemeProvider {...{ theme }}>\n      <div\n        style={{\n          color: text.primary,\n          backgroundColor: palette.secondary.main,\n          minHeight: \"100%\",\n        }}\n      >\n        {children}\n      </div>\n    </ThemeProvider>\n  );\n};\n","import React from \"react\";\nimport Container from \"../../components/Container\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from \"react-vertical-timeline-component\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport { useTheme } from \"@material-ui/core\";\nimport { RiReactjsLine } from \"react-icons/ri\";\nimport experienceJSON from \"./experience.json\";\n\nexport default () => {\n  const { palette } = useTheme();\n  const elementContentStyle = {\n    backgroundColor: palette.secondary.dark,\n    color: palette.text.primary,\n    WebkitBoxShadow: \"0px 9px 41px -2px rgba(0,0,0,0.53)\",\n    MozBoxShadow: \"0px 9px 41px -2px rgba(0,0,0,0.53)\",\n    boxShadow: \"0px 9px 41px -2px rgba(0,0,0,0.53)\",\n  };\n  const iconStyle = {\n    backgroundColor: palette.primary.main,\n    color: \"#fff\",\n    fontSize: \"50px\",\n  };\n  const { experience: experienceData } = experienceJSON;\n  return (\n    <Container>\n      <VerticalTimeline style={{ zIndex: 0 }}>\n        {experienceData.map((experience) => {\n          const { subTitle, title, id, tools, tasks, date } = experience;\n          return (\n            <VerticalTimelineElement\n              key={`timeline${id}`}\n              className=\"vertical-timeline-element--work timeline-item-container\"\n              contentStyle={elementContentStyle}\n              contentArrowStyle={{\n                borderRight: `7px solid ${palette.primary.main}`,\n              }}\n              date={date}\n              iconStyle={iconStyle}\n              icon={<RiReactjsLine />}\n            >\n              <h3 className=\"vertical-timeline-element-title\">{title}</h3>\n              <h4 className=\"vertical-timeline-element-subtitle\">{subTitle}</h4>\n              <p>{tasks}</p>\n              <h3>Tools: </h3>\n              <p>{tools}</p>\n            </VerticalTimelineElement>\n          );\n        })}\n      </VerticalTimeline>\n    </Container>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { useTheme } from \"@material-ui/core\";\nimport \"./style.css\";\n\ninterface Props {\n  children?: ReactNode | ReactNode[];\n  className?: string;\n}\n\nexport default ({ children, className }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <div\n      style={{ backgroundColor: palette.secondary.dark }}\n      className={`card-container ${className}`}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  title: string;\n}\n\nexport default ({ title }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <li className=\"skills-point\">\n      <div\n        className=\"skills-bullet\"\n        style={{ backgroundColor: palette.primary.main }}\n      />\n      <div>{title}</div>\n    </li>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport Card from \"../../../components/Card\";\nimport ListPoint from \"./ListPoint\";\n\ninterface Props {\n  children?: ReactNode | ReactNode[];\n  title: string;\n  points: string[];\n}\n\nexport default ({ children, title, points }: Props) => {\n  return (\n    <Card className=\"skills-card\">\n      <h2>{title}</h2>\n      <ul>\n        {points.map((point) => (\n          <ListPoint title={point} />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport Container from \"../../components/Container\";\nimport SkillCard from \"./components/SkillCard\";\nimport data from \"./skills.json\";\nimport { useSpring, animated } from \"react-spring\";\nimport { SCREEN_TRANSITION_CONFIG } from \"../../globals\";\n\nimport \"./style.css\";\n\nexport default () => {\n  const { skills } = data;\n  const animationProps = useSpring(SCREEN_TRANSITION_CONFIG);\n  return (\n    <animated.div style={animationProps}>\n      <Container>\n        <h1>Skills</h1>\n        <Container className=\"skills-container\">\n          <SkillCard title=\"Technologies:\" points={skills.technologies} />\n          <SkillCard title=\"Databases:\" points={skills.databases} />\n          <SkillCard title=\"UI/UIX:\" points={skills.others} />\n          <SkillCard title=\"Others:\" points={skills.ui} />\n        </Container>\n      </Container>\n    </animated.div>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\nimport { useSpring, animated } from \"react-spring\";\n\ninterface Props {\n  images: any[];\n  currentImage: number;\n  setCurrentImage: (index: number) => void;\n}\n\nexport default ({ images, currentImage, setCurrentImage }: Props) => {\n  const { palette } = useTheme();\n\n  return (\n    <div className=\"gallery-status\">\n      {images.map((_, index) => {\n        const checked = index === currentImage;\n        const backgroundColor = checked\n          ? palette.primary.main\n          : palette.secondary.light;\n        const { scale } = useSpring({\n          scale: checked ? 1 : 0,\n        });\n        const scaleTransform = scale\n          .interpolate({ range: [0, 1], output: [1, 1.35] })\n          .interpolate((currentScale) => `scale(${currentScale})`);\n        return (\n          <animated.div\n            key={`sPtr${index}`}\n            onClick={() => setCurrentImage(index)}\n            className={`gallery-status-point ${\n              checked ? \"gallery-status-point-checked\" : \"\"\n            }`}\n            style={{ backgroundColor, transform: scaleTransform }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport { GoChevronRight, GoChevronLeft } from \"react-icons/go\";\nimport { useTheme, IconButton } from \"@material-ui/core\";\nimport GalleryStatus from \"./GalleryStatus\";\n\ninterface imageType {\n  id: string | number;\n  uri: string;\n}\ninterface Props {\n  images: imageType[];\n}\n\nconst IMAGE_WIDTH = 320;\n\nexport default ({ images }: Props) => {\n  const [currentImage, setCurrentImage] = useState(0);\n\n  const { palette } = useTheme();\n  const { x } = useSpring({ x: currentImage });\n  const transformX = x\n    .interpolate({\n      range: images.map((_, index) => index),\n      output: images.map((_, index) => IMAGE_WIDTH * index),\n    })\n    .interpolate((currentX) => `translateX(-${currentX}px)`);\n  return (\n    <div className=\"gallery-container\">\n      <div\n        className=\"project-gallery\"\n        style={{ width: `${images.length * IMAGE_WIDTH}px` }}\n      >\n        {images.map((image) => (\n          <animated.div\n            key={image.id}\n            className=\"gallery-image-container\"\n            style={{\n              backgroundImage: `url(${image.uri})`,\n              transform: transformX,\n            }}\n          />\n        ))}\n      </div>\n      <div className=\"gallery-controller\">\n        <IconButton\n          onClick={() => {\n            if (currentImage > 0) setCurrentImage(currentImage - 1);\n          }}\n        >\n          <GoChevronLeft size={50} color={palette.text.secondary} />\n        </IconButton>\n        <IconButton\n          onClick={() => {\n            if (currentImage + 1 < images.length)\n              setCurrentImage(currentImage + 1);\n          }}\n        >\n          <GoChevronRight size={50} color={palette.text.secondary} />\n        </IconButton>\n      </div>\n      <GalleryStatus {...{ images, setCurrentImage, currentImage }} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  renderIcon: (props: any) => React.ReactNode;\n  link: string;\n}\n\nexport default ({ renderIcon, link }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <div className=\"project-link-container\">\n      {renderIcon({\n        style: {\n          color: palette.text.primary,\n        },\n        size: 25,\n      })}\n      <a\n        href={link}\n        className=\"project-link\"\n        style={{ color: palette.primary.main }}\n      >\n        {link}\n      </a>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Card from \"../../../components/Card\";\nimport ImageGallery from \"./ImageGallery\";\nimport { IoLogoGithub } from \"react-icons/io\";\nimport { GoDeviceMobile, GoHome } from \"react-icons/go\";\nimport ProjectLink from \"./ProjectLink\";\n\ninterface Props {\n  project: {\n    title: string;\n    description: string;\n    github: string;\n    store: string;\n    emulator: string;\n  };\n}\n\nexport default ({\n  project: { title, description, github, store, emulator },\n}: Props) => {\n  return (\n    <Card className=\"project-tile-card\">\n      <ImageGallery\n        images={[\n          {\n            id: 1,\n            uri: `${process.env.PUBLIC_URL}/timer.gif`,\n          },\n          {\n            id: 2,\n            uri: `${process.env.PUBLIC_URL}/edit.jpg`,\n          },\n        ]}\n      />\n\n      <h2 className=\"project-title\">{title}</h2>\n      <div className=\"project-description\">{description}</div>\n      <div className=\"project-source-links\">\n        <ProjectLink\n          link={github}\n          renderIcon={(iconProps) => <IoLogoGithub {...iconProps} />}\n        />\n        {emulator && (\n          <ProjectLink\n            link={emulator}\n            renderIcon={(iconProps) => <GoDeviceMobile {...iconProps} />}\n          />\n        )}\n        {store && (\n          <ProjectLink\n            link={store}\n            renderIcon={(iconProps) => <GoHome {...iconProps} />}\n          />\n        )}\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport ProjectTile from \"./ProjectTile\";\nimport \"../style.css\";\n\nconst data = [\n  {\n    id: \"1\",\n    title: \"Workout timer\",\n    github: \"https://github.comhttps://github.comhttps://github.com\",\n    store: \"https://g.apps.com\",\n    emulator: \"https://emulator.com\",\n    description:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec felis sit amet eros semper consequat quis vel urna. Donec tellus mauris Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec felis sit amet eros semper consequat quis vel urna. Donec tellus mauris,Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nec felis sit amet eros semper consequat quis vel urna. Donec tellus mauris,\",\n  },\n  {\n    id: \"2\",\n    title: \"Workout timer\",\n    github: \"https://github.com\",\n    store: \"https://g.apps.com\",\n    emulator: \"https://emulator.com\",\n    description: \"Description\",\n  },\n  {\n    id: \"3\",\n    title: \"Workout timer\",\n    github: \"https://github.com\",\n    store: \"https://g.apps.com\",\n    emulator: \"https://emulator.com\",\n    description: \"Description\",\n  },\n];\n\nexport default () => {\n  return (\n    <div className=\"projects-grid\">\n      {data.map((current) => (\n        <ProjectTile key={`project${current.id}`} project={current} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport Container from \"../../components/Container\";\nimport ProjectsGrid from \"./components/ProjectsGrid\";\nimport { SCREEN_TRANSITION_CONFIG } from \"../../globals\";\nimport { useSpring, animated } from \"react-spring\";\n\nexport default () => {\n  const animationProps = useSpring(SCREEN_TRANSITION_CONFIG);\n  return (\n    <animated.div style={animationProps}>\n      <Container>\n        <h1>Projects</h1>\n        <Container>\n          <ProjectsGrid />\n        </Container>\n      </Container>\n    </animated.div>\n  );\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store, { persistedStore } from \"./store\";\nimport Main from \"./screens/Main\";\n\nimport { MAIN, EXP, SKILLS, PROJECTS } from \"./navRoutes\";\n\nimport Navigation from \"./components/Navigation\";\nimport ThemeProvider from \"./ThemeProvider\";\nimport Experience from \"./screens/Experience\";\nimport Skills from \"./screens/Skills\";\nimport Projects from \"./screens/Projects\";\n\nexport default () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistedStore}>\n        <ThemeProvider>\n          <Router>\n            <Navigation />\n            <Switch>\n              <Route exact path={EXP} component={Experience} />\n              <Route exact path={MAIN} component={Main} />\n              <Route exact path={SKILLS} component={Skills} />\n              <Route exact path={PROJECTS} component={Projects} />\n            </Switch>\n          </Router>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}