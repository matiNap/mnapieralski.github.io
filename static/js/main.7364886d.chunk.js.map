{"version":3,"sources":["firebaseConfig.js","Firebase.ts","slices/appSlice.ts","reducer.ts","store.ts","components/Container/index.tsx","globals.ts","screens/Main/components/EmailWrapper.tsx","components/NavWrapper/index.tsx","navRoutes.ts","components/Loading/index.tsx","screens/Main/index.tsx","components/Header/components/Logo.tsx","components/Header/components/HeaderItem.tsx","components/Header/components/ThemeSelector.tsx","components/Header/index.tsx","components/Drawer/components/DrawerItem.tsx","components/Drawer/index.tsx","components/Navigation/index.tsx","theme/material.ts","ThemeProvider.tsx","screens/Experience/index.tsx","components/Card/index.tsx","screens/Skills/components/ListPoint.tsx","screens/Skills/components/SkillCard.tsx","screens/Skills/index.tsx","screens/Projects/components/GalleryStatus.tsx","screens/Projects/components/ImageGallery.tsx","screens/Projects/components/ProjectLink.tsx","screens/Projects/components/ProjectTile.tsx","screens/Projects/components/ProjectPreview.tsx","screens/Projects/components/ProjectsGrid.tsx","screens/Projects/index.tsx","App.tsx","index.js"],"names":["console","log","process","JSON","parse","REACT_APP_FIREBASE_CONFIG","firebase","firebaseConfig","firestore","initialState","darkTheme","aboutMe","experience","projects","skills","appSlice","createSlice","name","reducers","switchTheme","state","checkDarkTheme","action","payload","getAboutMe","getExperience","getSkills","key","data","getProjects","extraReducers","REHYDRATE","actions","selectDarkTheme","app","selectAboutMe","selectExperience","selectSkills","selectProjects","combineReducers","persistConfig","storage","persistedReducer","persistReducer","reducer","store","configureStore","devTools","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","persistedStore","persistStore","children","className","MY_EMAIL","SCREEN_TRANSITION_CONFIG","config","mass","tension","friction","opacity","from","marginTop","palette","useTheme","style","backgroundColor","secondary","light","color","text","primary","Button","onClick","navigator","clipboard","writeText","variant","endIcon","classes","root","to","EXP","CircularProgress","dispatch","useDispatch","useSelector","useLayoutEffect","a","collection","doc","get","info","animationProps","useSpring","Boolean","div","Container","Divider","component","EmailWrapper","NavWrapper","main","Loading","opened","anchorEl","labelStyle","Popper","open","placement","disablePortal","Paper","dark","Checkbox","checked","onChange","openDrawer","useState","themeOpened","setThemeOpened","anchor","setAnchor","IconButton","size","Logo","HeaderItem","navRoutes","href","target","event","currentTarget","ThemeSelector","hideDrawer","drawerContainerStyle","left","DrawerItem","Switch","value","e","drawerOpened","setDrawerOpened","Header","Drawer","lightTheme","createMuiTheme","typography","fontFamily","theme","ThemeProvider","minHeight","experienceData","docs","map","docData","elementContentStyle","WebkitBoxShadow","MozBoxShadow","boxShadow","iconStyle","fontSize","zIndex","subTitle","title","id","tools","tasks","date","contentStyle","contentArrowStyle","borderRight","icon","points","Card","point","ListPoint","forEach","technologies","others","databases","ui","SkillCard","images","currentImage","setCurrentImage","selected","gellryStatusClass","_","index","scaleTransform","scale","interpolate","range","output","currentScale","transform","setSelectedProject","imageWidth","transformX","x","currentX","galleryMainContainer","containerClass","imageContainerClass","galleryControllerClass","cursor","width","length","image","backgroundImage","border","GalleryStatus","renderIcon","link","project","description","github","emulator","ImageGallery","ProjectLink","iconProps","exit","opacityTransform","duration","Modal","selectedProject","projectsData","currentDoc","current","ProjectTile","ProjectPreview","ProjectsGrid","loading","persistor","Navigation","exact","path","Experience","Main","Skills","Projects","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.7364886d.chunk.js","sourcesContent":["console.log(\"TEst\", process.env);\n\nexport default {\n  ...JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG),\n};\n","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport firebaseConfig from \"./firebaseConfig\";\nfirebase.initializeApp(firebaseConfig.firebaseConfig);\nconst firestore = firebase.firestore();\n\nexport { firestore };\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { RootState, AppThunk } from \"../store\";\nimport { REHYDRATE } from \"redux-persist/es/constants\";\nimport { firestore } from \"../Firebase\";\nimport { SkillsType, Project } from \"../types\";\n\nconst initialState: {\n  darkTheme: boolean;\n  aboutMe: null | string;\n  experience: null | any[];\n  projects: null | Project[];\n  skills: null | SkillsType;\n} = {\n  darkTheme: false,\n  aboutMe: null,\n  experience: null,\n  projects: null,\n  skills: null,\n};\nconst appSlice = createSlice({\n  name: \"app\",\n  initialState,\n  reducers: {\n    switchTheme(state) {\n      state.darkTheme = !state.darkTheme;\n    },\n    checkDarkTheme(state, action) {\n      state.darkTheme = action.payload;\n    },\n    getAboutMe(state, action) {\n      state.aboutMe = action.payload;\n    },\n    getExperience(state, action) {\n      state.experience = action.payload;\n    },\n    getSkills(state, action) {\n      if (action.payload) {\n        const { key, data } = action.payload;\n        state.skills = {\n          ...state.skills,\n          [key]: data,\n        };\n      } else state.skills = action.payload;\n    },\n    getProjects(state, action) {\n      state.projects = action.payload;\n    },\n  },\n  extraReducers: {\n    [REHYDRATE]: (state) => {\n      return {\n        ...initialState,\n        darkTheme: state.darkTheme,\n      };\n    },\n  },\n});\n\nexport const {\n  switchTheme,\n  checkDarkTheme,\n  getAboutMe,\n  getExperience,\n  getSkills,\n  getProjects,\n} = appSlice.actions;\n\nexport default appSlice.reducer;\n\nexport const selectDarkTheme = (state: RootState) => state.app.darkTheme;\nexport const selectAboutMe = (state: RootState) => state.app.aboutMe;\nexport const selectExperience = (state: RootState) => state.app.experience;\nexport const selectSkills = (state: RootState) => state.app.skills;\nexport const selectProjects = (state: RootState) => state.app.projects;\n\nexport const fetchAboutMe = (): AppThunk => async (dispatch) => {\n  try {\n    const aboutMe = await firestore.collection(\"user\").doc(\"aboutMe\").get();\n    const data: any = aboutMe.data();\n    dispatch(getAboutMe(data?.info));\n  } catch (error) {\n    dispatch(getAboutMe(null));\n  }\n};\nexport const fetchExperience = (): AppThunk => async (dispatch) => {\n  try {\n    const experience = await firestore.collection(\"experience\").get();\n    const experienceData = experience.docs.map((docData) => docData.data());\n    dispatch(getExperience(experienceData));\n  } catch (error) {\n    dispatch(getExperience(null));\n  }\n};\n\nexport const fetchSkills = (): AppThunk => async (dispatch) => {\n  try {\n    const skills = await firestore.collection(\"skills\").get();\n\n    skills.docs.forEach((docData) => {\n      const data = docData.data()?.data;\n      dispatch(getSkills({ key: docData.id, data }));\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(getSkills(null));\n  }\n};\n\nexport const fetchProjects = (): AppThunk => async (dispatch) => {\n  try {\n    const projects = await firestore.collection(\"projects\").get();\n\n    const projectsData = projects.docs.map((currentDoc) => ({\n      id: currentDoc.id,\n      ...currentDoc.data(),\n    }));\n\n    dispatch(getProjects(projectsData));\n  } catch (error) {\n    dispatch(getProjects(null));\n  }\n};\n","import { combineReducers } from \"redux\";\nimport appSlice from \"./slices/appSlice\";\n\nexport default combineReducers({\n  app: appSlice,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  ThunkAction,\n  Action,\n} from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PURGE,\n  REGISTER,\n  PERSIST,\n} from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: true,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistedStore = persistStore(store);\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n","import React, { ReactNode } from \"react\";\nimport \"./style.css\";\n\ninterface Props {\n  children: ReactNode | ReactNode[];\n  className?: string;\n}\n\nexport default ({ children, className }: Props) => {\n  return <div className={`content-container ${className}`}>{children}</div>;\n};\n","export const MY_GITHUB = \"https://github.com/matiNap\";\nexport const MY_EMAIL = \"mateusz.napieralski04@gmail.com\";\nexport const SCREEN_TRANSITION_CONFIG = {\n  config: { mass: 5, tension: 500, friction: 80 },\n  opacity: 1,\n  from: { opacity: 0, marginTop: 1000 },\n  marginTop: 0,\n};\n","import React from \"react\";\nimport { useTheme, Button } from \"@material-ui/core\";\nimport { FaCopy } from \"react-icons/fa\";\nimport { MY_EMAIL } from \"../../../globals\";\n\nexport default () => {\n  const { palette } = useTheme();\n\n  return (\n    <div\n      className=\"email-wrapper-container\"\n      style={{ backgroundColor: palette.secondary.light }}\n    >\n      <div className=\"email-inner-container\">\n        <p style={{ color: palette.text.primary }}>{MY_EMAIL}</p>\n      </div>\n      <Button\n        onClick={() => {\n          navigator.clipboard.writeText(MY_EMAIL);\n        }}\n        variant=\"contained\"\n        endIcon={<FaCopy color={palette.text.primary} />}\n        classes={{ root: \"copy-button\", endIcon: \"copy-label\" }}\n        style={{ backgroundColor: palette.secondary.light }}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  to: string;\n  children?: React.ReactNode | string | JSX.Element;\n}\n\nexport default ({ to, children }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <Link {...{ to }} style={{ color: palette.text.primary }}>\n      {children}\n    </Link>\n  );\n};\n","export const MAIN = \"/\";\nexport const CHAT = \"/chat\";\nexport const SKILLS = \"/skills\";\nexport const EXP = \"/experience\";\nexport const PROJECTS = \"/projects\";\nexport const RESUME = `${process.env.PUBLIC_URL}/resume.pdf`;\n","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport \"./style.css\";\n\nexport default () => {\n  return (\n    <div className=\"loading-container\">\n      <CircularProgress color=\"primary\" />\n    </div>\n  );\n};\n","import React, { useLayoutEffect } from \"react\";\nimport Container from \"../../components/Container\";\nimport \"./style.css\";\nimport { Divider, useTheme } from \"@material-ui/core\";\nimport EmailWrapper from \"./components/EmailWrapper\";\nimport NavWrapper from \"../../components/NavWrapper\";\nimport * as navRoutes from \"../../navRoutes\";\nimport { useSpring, animated } from \"react-spring\";\nimport { SCREEN_TRANSITION_CONFIG } from \"../../globals\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAboutMe, selectAboutMe } from \"../../slices/appSlice\";\nimport Loading from \"../../components/Loading\";\n\nexport default () => {\n  const { palette } = useTheme();\n  const dispatch = useDispatch();\n  const aboutMe = useSelector(selectAboutMe);\n  useLayoutEffect(() => {\n    dispatch(fetchAboutMe());\n  }, [dispatch]);\n  const animationProps = useSpring(SCREEN_TRANSITION_CONFIG);\n  if (Boolean(aboutMe)) {\n    return (\n      <animated.div style={animationProps}>\n        <Container>\n          <h1>About me</h1>\n          <Container>\n            <div className=\"about-me-text\">{aboutMe}</div>\n            <Divider\n              variant=\"middle\"\n              classes={{ root: \"content-divider public-divider\" }}\n              component=\"div\"\n            />\n          </Container>\n        </Container>\n        <Container>\n          <h1>Contact with me</h1>\n          <Container>\n            <div className=\"contact-info\">\n              <p className=\"contact-text\">Via mail</p>\n              <EmailWrapper />\n              <p className=\"contact-or\">or</p>\n              <div className=\"contact-chat-container\">\n                <p className=\"contact-text\">Text me</p>\n                <NavWrapper to={navRoutes.CHAT}>\n                  <p\n                    className=\"contact-chat-link contact-text\"\n                    style={{ color: palette.primary.main }}\n                  >\n                    here\n                  </p>\n                </NavWrapper>\n              </div>\n            </div>\n          </Container>\n        </Container>\n      </animated.div>\n    );\n  } else {\n    return <Loading />;\n  }\n};\n","import React from \"react\";\nimport NavWrapper from \"../../NavWrapper\";\nimport { MAIN } from \"../../../navRoutes\";\n\nexport default () => {\n  return (\n    <NavWrapper to={MAIN}>\n      <div className=\"logo-container\">\n        <div className=\"logo-main\">Mateusz Napieralski</div>\n        <div className=\"logo-title\">Full stack developer</div>\n      </div>\n    </NavWrapper>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport default ({ children }: Props) => {\n  const { palette } = useTheme();\n\n  return (\n    <li className=\"menu-item\" style={{ color: palette.text.primary }}>\n      {children}\n    </li>\n  );\n};\n","import React from \"react\";\nimport { Checkbox, Popper, Paper, useTheme } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectDarkTheme, checkDarkTheme } from \"../../../slices/appSlice\";\n\ninterface Props {\n  opened: boolean;\n  anchorEl: any;\n}\n\nexport default ({ opened, anchorEl }: Props) => {\n  const darkTheme = useSelector(selectDarkTheme);\n  const dispatch = useDispatch();\n  const { palette } = useTheme();\n  const labelStyle = { color: palette.text.primary };\n  return (\n    <Popper\n      open={opened}\n      placement=\"bottom\"\n      anchorEl={anchorEl}\n      disablePortal={false}\n      className=\"theme-popper-shadow\"\n    >\n      <Paper\n        className=\"theme-selector-container\"\n        style={{ backgroundColor: palette.secondary.dark }}\n      >\n        <div className=\"checkbox-theme-container\">\n          <Checkbox\n            classes={{ root: \"checkbox-theme\" }}\n            color=\"primary\"\n            checked={darkTheme}\n            onChange={() => dispatch(checkDarkTheme(true))}\n          />\n          <p style={labelStyle}>Dark theme</p>\n        </div>\n        <div className=\"checkbox-theme-container\">\n          <Checkbox\n            color=\"primary\"\n            classes={{ root: \"checkbox-theme\" }}\n            checked={!darkTheme}\n            onChange={() => dispatch(checkDarkTheme(false))}\n          />\n          <p style={labelStyle}>Light theme</p>\n        </div>\n      </Paper>\n    </Popper>\n  );\n};\n","/* eslint-disable react/jsx-no-target-blank */\nimport React, { useState } from \"react\";\nimport Logo from \"./components/Logo\";\nimport \"./style.css\";\nimport { IconButton, useTheme } from \"@material-ui/core\";\nimport { MdMenu } from \"react-icons/md\";\nimport HeaderItem from \"./components/HeaderItem\";\nimport NavWrapper from \"../NavWrapper\";\nimport * as navRoutes from \"../../navRoutes\";\nimport { MY_GITHUB } from \"../../globals\";\nimport ThemeSelector from \"./components/ThemeSelector\";\n\ninterface Props {\n  openDrawer: () => void;\n}\n\nexport default ({ openDrawer }: Props) => {\n  const { palette } = useTheme();\n\n  const [themeOpened, setThemeOpened] = useState(false);\n  const [anchor, setAnchor] = useState<any>(null);\n  return (\n    <header\n      className=\"menu-container\"\n      style={{ backgroundColor: palette.secondary.dark }}\n    >\n      <div className=\"header-menu-icon\">\n        <IconButton onClick={openDrawer}>\n          <MdMenu size={50} color={palette.text.primary} />\n        </IconButton>\n      </div>\n      <div className=\"header-logo-container\">\n        <Logo />\n      </div>\n      <div className=\"menu\">\n        <ul className=\"menu-list\">\n          <HeaderItem>\n            <NavWrapper to={navRoutes.SKILLS}>Skills</NavWrapper>\n          </HeaderItem>\n          <HeaderItem>\n            <NavWrapper to={navRoutes.EXP}>Experience</NavWrapper>\n          </HeaderItem>\n          <HeaderItem>\n            <NavWrapper to={navRoutes.PROJECTS}>Projects</NavWrapper>\n          </HeaderItem>\n          <HeaderItem>\n            <a\n              href={`${process.env.PUBLIC_URL}/resume.pdf`}\n              target=\"_blank\"\n              style={{ color: palette.text.primary }}\n            >\n              My resume\n            </a>\n          </HeaderItem>\n          <HeaderItem>\n            <a\n              href={MY_GITHUB}\n              style={{ color: palette.text.primary }}\n              target=\"_blank\"\n            >\n              Github\n            </a>\n          </HeaderItem>\n\n          <HeaderItem>\n            <div\n              onClick={(event) => {\n                setAnchor(event.currentTarget);\n                setThemeOpened(!themeOpened);\n              }}\n            >\n              Theme\n            </div>\n            <ThemeSelector opened={themeOpened} anchorEl={anchor} />\n          </HeaderItem>\n        </ul>\n      </div>\n    </header>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\ninterface Props {\n  children: React.ReactNode;\n  hideDrawer: () => void;\n}\n\nexport default ({ children, hideDrawer }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <li\n      className=\"drawer-item\"\n      style={{ color: palette.text.primary }}\n      onClick={hideDrawer}\n    >\n      {children}\n    </li>\n  );\n};\n","import React from \"react\";\nimport { GoChevronLeft } from \"react-icons/go\";\nimport {\n  FiGithub,\n  FiMonitor,\n  FiBook,\n  FiFileText,\n  FiCheckCircle,\n  FiMoon,\n} from \"react-icons/fi\";\nimport DrawerItem from \"./components/DrawerItem\";\nimport \"./style.css\";\nimport * as navRoutes from \"../../navRoutes\";\nimport NavWrapper from \"../NavWrapper\";\nimport { IconButton, Switch, useTheme } from \"@material-ui/core\";\nimport { switchTheme, selectDarkTheme } from \"../../slices/appSlice\";\nimport * as globals from \"../../globals\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\ninterface Props {\n  opened: boolean;\n  hideDrawer: () => void;\n}\n\nconst ICON_SIZE = 32;\n\nexport default ({ opened, hideDrawer }: Props) => {\n  const drawerContainerStyle = opened ? {} : { left: \"-150vw\" };\n  const darkTheme = useSelector(selectDarkTheme);\n  const dispatch = useDispatch();\n  const { palette } = useTheme();\n  return (\n    <div\n      className=\"drawer-container\"\n      style={{\n        backgroundColor: palette.secondary.main,\n        ...drawerContainerStyle,\n      }}\n    >\n      <div className=\"drawer-header\">\n        <div className=\"drawer-hide-icon-container\">\n          <IconButton onClick={hideDrawer}>\n            <GoChevronLeft size={50} color={palette.text.primary} />\n          </IconButton>\n        </div>\n      </div>\n\n      <ul className=\"drawer-list\">\n        <DrawerItem {...{ hideDrawer }}>\n          <FiCheckCircle\n            className=\"drawer-icon\"\n            size={ICON_SIZE}\n            color={palette.text.primary}\n          />\n          <NavWrapper to={navRoutes.SKILLS}>Skills</NavWrapper>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <FiBook\n            className=\"drawer-icon\"\n            size={ICON_SIZE}\n            color={palette.text.primary}\n          />\n          <NavWrapper to={navRoutes.EXP}>Experience</NavWrapper>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <FiMonitor\n            className=\"drawer-icon\"\n            size={ICON_SIZE}\n            color={palette.text.primary}\n          />\n          <NavWrapper to={navRoutes.PROJECTS}>Projects</NavWrapper>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <FiFileText\n            className=\"drawer-icon\"\n            size={ICON_SIZE}\n            color={palette.text.primary}\n          />\n          My resume\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <FiGithub\n            className=\"drawer-icon\"\n            size={ICON_SIZE}\n            color={palette.text.primary}\n          />\n          <a href={globals.MY_GITHUB} style={{ color: palette.text.primary }}>\n            Github\n          </a>\n        </DrawerItem>\n        <DrawerItem {...{ hideDrawer }}>\n          <FiMoon\n            className=\"drawer-icon\"\n            size={ICON_SIZE}\n            color={palette.text.primary}\n          />\n          Dark theme\n          <Switch\n            value={darkTheme}\n            name=\"switchTheme\"\n            color=\"primary\"\n            onChange={(e, checked) => {\n              dispatch(switchTheme());\n            }}\n          />\n        </DrawerItem>\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport Header from \"../Header\";\nimport Drawer from \"../Drawer\";\n\nexport default () => {\n  const [drawerOpened, setDrawerOpened] = useState(false);\n\n  return (\n    <div>\n      <Header openDrawer={() => setDrawerOpened(true)} />\n      <Drawer hideDrawer={() => setDrawerOpened(false)} opened={drawerOpened} />\n    </div>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const lightTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0089f2\",\n    },\n    secondary: {\n      light: \"#c6c6c6\",\n      main: \"#eee\",\n      dark: \"#ededed\",\n    },\n    text: {\n      primary: \"#2F2F2F\",\n      secondary: \"#F2F2F2\",\n    },\n  },\n  typography: {\n    fontFamily: \"Rubik\",\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0089f2\",\n    },\n    secondary: {\n      light: \"#595959\",\n      main: \"#3D3B3C\",\n      dark: \"#323031\",\n    },\n\n    text: {\n      primary: \"#F2F2F2\",\n      secondary: \"#2F2F2F\",\n    },\n  },\n  typography: {\n    fontFamily: \"Rubik\",\n  },\n});\n","import React, { ReactNode } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { darkTheme, lightTheme } from \"./theme/material\";\nimport { useSelector } from \"react-redux\";\nimport { selectDarkTheme } from \"./slices/appSlice\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport default ({ children }: Props) => {\n  const isDarkTheme = useSelector(selectDarkTheme);\n  const theme = isDarkTheme ? darkTheme : lightTheme;\n  const { palette } = theme;\n  const { text } = palette;\n  return (\n    <ThemeProvider {...{ theme }}>\n      <div\n        style={{\n          color: text.primary,\n          backgroundColor: palette.secondary.main,\n          minHeight: \"100%\",\n        }}\n      >\n        {children}\n      </div>\n    </ThemeProvider>\n  );\n};\n","import React, { useLayoutEffect } from \"react\";\nimport Container from \"../../components/Container\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from \"react-vertical-timeline-component\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport { useTheme } from \"@material-ui/core\";\nimport { RiReactjsLine } from \"react-icons/ri\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchExperience, selectExperience } from \"../../slices/appSlice\";\nimport Loading from \"../../components/Loading\";\n\nexport default () => {\n  const { palette } = useTheme();\n  const experienceData = useSelector(selectExperience);\n  const dispatch = useDispatch();\n  useLayoutEffect(() => {\n    dispatch(fetchExperience());\n  }, [dispatch]);\n\n  const elementContentStyle = {\n    backgroundColor: palette.secondary.dark,\n    color: palette.text.primary,\n    WebkitBoxShadow: \"0px 9px 41px -2px rgba(0,0,0,0.53)\",\n    MozBoxShadow: \"0px 9px 41px -2px rgba(0,0,0,0.53)\",\n    boxShadow: \"0px 9px 41px -2px rgba(0,0,0,0.53)\",\n  };\n  const iconStyle = {\n    backgroundColor: palette.primary.main,\n    color: \"#fff\",\n    fontSize: \"50px\",\n  };\n  if (experienceData) {\n    return (\n      <Container>\n        <VerticalTimeline style={{ zIndex: 0 }}>\n          {experienceData.map((experience) => {\n            const { subTitle, title, id, tools, tasks, date } = experience;\n            return (\n              <VerticalTimelineElement\n                key={`timeline${id}`}\n                className=\"vertical-timeline-element--work timeline-item-container\"\n                contentStyle={elementContentStyle}\n                contentArrowStyle={{\n                  borderRight: `7px solid ${palette.primary.main}`,\n                }}\n                date={date}\n                iconStyle={iconStyle}\n                icon={<RiReactjsLine />}\n              >\n                <h3 className=\"vertical-timeline-element-title\">{title}</h3>\n                <h4 className=\"vertical-timeline-element-subtitle\">\n                  {subTitle}\n                </h4>\n                <p>{tasks}</p>\n                <h3>Tools: </h3>\n                <p>{tools}</p>\n              </VerticalTimelineElement>\n            );\n          })}\n        </VerticalTimeline>\n      </Container>\n    );\n  } else return <Loading />;\n};\n","import React, { ReactNode } from \"react\";\nimport { useTheme } from \"@material-ui/core\";\nimport \"./style.css\";\n\ninterface Props {\n  children?: ReactNode | ReactNode[];\n  className?: string;\n}\n\nexport default ({ children, className }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <div\n      style={{ backgroundColor: palette.secondary.dark }}\n      className={`card-container ${className}`}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  title: string;\n}\n\nexport default ({ title }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <li className=\"skills-point\">\n      <div\n        className=\"skills-bullet\"\n        style={{ backgroundColor: palette.primary.main }}\n      />\n      <div>{title}</div>\n    </li>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport Card from \"../../../components/Card\";\nimport ListPoint from \"./ListPoint\";\n\ninterface Props {\n  children?: ReactNode | ReactNode[];\n  title: string;\n  points: string[];\n}\n\nexport default ({ children, title, points }: Props) => {\n  return (\n    <Card className=\"skills-card\">\n      <h2>{title}</h2>\n      <ul>\n        {points.map((point) => (\n          <ListPoint title={point} key={point} />\n        ))}\n      </ul>\n    </Card>\n  );\n};\n","import React, { useLayoutEffect } from \"react\";\nimport Container from \"../../components/Container\";\nimport SkillCard from \"./components/SkillCard\";\nimport { useSpring, animated } from \"react-spring\";\nimport { SCREEN_TRANSITION_CONFIG } from \"../../globals\";\n\nimport \"./style.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectSkills, fetchSkills } from \"../../slices/appSlice\";\nimport Loading from \"../../components/Loading\";\n\nexport default () => {\n  const skills = useSelector(selectSkills);\n  const dispatch = useDispatch();\n  useLayoutEffect(() => {\n    dispatch(fetchSkills());\n  }, [dispatch]);\n  const animationProps = useSpring(SCREEN_TRANSITION_CONFIG);\n\n  if (\n    skills &&\n    skills.technologies &&\n    skills.others &&\n    skills.databases &&\n    skills.ui\n  ) {\n    const { technologies, others, databases, ui } = skills;\n    return (\n      <animated.div style={animationProps}>\n        <Container>\n          <h1>Skills</h1>\n          <Container className=\"skills-container\">\n            <SkillCard title=\"Technologies:\" points={technologies} />\n            <SkillCard title=\"Databases:\" points={databases} />\n            <SkillCard title=\"UI/UIX:\" points={ui} />\n            <SkillCard title=\"Others:\" points={others} />\n          </Container>\n        </Container>\n      </animated.div>\n    );\n  } else return <Loading />;\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\nimport { useSpring, animated } from \"react-spring\";\n\ninterface Props {\n  images: any[];\n  currentImage: number;\n  setCurrentImage: (index: number) => void;\n  selected?: boolean;\n}\n\nexport default ({ images, currentImage, setCurrentImage, selected }: Props) => {\n  const { palette } = useTheme();\n  const gellryStatusClass = selected\n    ? \"gallery-status gallery-status-selected\"\n    : \"gallery-status\";\n  return (\n    <div className={gellryStatusClass}>\n      {images.map((_, index) => {\n        const checked = index === currentImage;\n        const backgroundColor = checked\n          ? palette.primary.main\n          : palette.secondary.light;\n        const { scale } = useSpring({\n          scale: checked ? 1 : 0,\n        });\n        const scaleTransform = scale\n          .interpolate({ range: [0, 1], output: [1, 1.35] })\n          .interpolate((currentScale) => `scale(${currentScale})`);\n        return (\n          <animated.div\n            key={`sPtr${index}`}\n            onClick={() => setCurrentImage(index)}\n            className={`gallery-status-point ${\n              checked ? \"gallery-status-point-checked\" : \"\"\n            }`}\n            style={{ backgroundColor, transform: scaleTransform }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport { GoChevronRight, GoChevronLeft } from \"react-icons/go\";\nimport { useTheme, IconButton } from \"@material-ui/core\";\nimport GalleryStatus from \"./GalleryStatus\";\n\ninterface Props {\n  images: string[];\n  selected?: boolean;\n  setSelectedProject?: () => void;\n}\n\nconst IMAGE_WIDTH = 20;\nconst IMAGE_WIDTH_SELECTED = 25;\n\nexport default ({ images, selected, setSelectedProject }: Props) => {\n  const [currentImage, setCurrentImage] = useState(0);\n  const imageWidth = selected ? IMAGE_WIDTH_SELECTED : IMAGE_WIDTH;\n  const { palette } = useTheme();\n  const { x } = useSpring({ x: currentImage });\n  const transformX = x\n    .interpolate({\n      range: images.map((_, index) => index),\n      output: images.map((_, index) => imageWidth * index),\n    })\n    .interpolate((currentX) => `translateX(-${currentX}rem)`);\n  const galleryMainContainer = selected\n    ? \"gallery-main-container gallery-main-container-selected\"\n    : \"gallery-main-container\";\n  const containerClass = selected\n    ? \"gallery-container gallery-container-selected\"\n    : \"gallery-container\";\n  const imageContainerClass = selected\n    ? \"gallery-image-container gallery-image-container-selected\"\n    : \"gallery-image-container\";\n  const galleryControllerClass = selected\n    ? \"gallery-controller gallery-controller-selected\"\n    : \"gallery-controller\";\n  return (\n    <div className={galleryMainContainer}>\n      <div\n        className={containerClass}\n        style={{ cursor: !selected ? \"pointer\" : \"\" }}\n      >\n        <div\n          className=\"project-gallery\"\n          onClick={() => {\n            if (setSelectedProject) setSelectedProject();\n          }}\n          style={{\n            width: `${images.length * imageWidth}rem`,\n          }}\n        >\n          {images.map((image) => (\n            <animated.div\n              key={image}\n              className={imageContainerClass}\n              style={{\n                backgroundImage: `url(${image})`,\n                transform: transformX,\n                border: selected ? `3px solid ${palette.secondary.light}` : \"\",\n              }}\n            />\n          ))}\n        </div>\n\n        <GalleryStatus\n          {...{ images, setCurrentImage, currentImage, selected }}\n        />\n      </div>\n      <div className={galleryControllerClass}>\n        <IconButton\n          className=\"gallery-button\"\n          style={{\n            backgroundColor: palette.secondary.light,\n          }}\n          onClick={() => {\n            if (currentImage > 0) setCurrentImage(currentImage - 1);\n          }}\n        >\n          <GoChevronLeft size={50} color={palette.text.primary} />\n        </IconButton>\n        <IconButton\n          className=\"gallery-button\"\n          style={{\n            backgroundColor: palette.secondary.light,\n          }}\n          onClick={() => {\n            if (currentImage + 1 < images.length)\n              setCurrentImage(currentImage + 1);\n          }}\n        >\n          <GoChevronRight size={50} color={palette.text.primary} />\n        </IconButton>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core\";\n\ninterface Props {\n  renderIcon: (props: any) => React.ReactNode;\n  link: string;\n}\n\nexport default ({ renderIcon, link }: Props) => {\n  const { palette } = useTheme();\n  return (\n    <div className=\"project-link-container\">\n      {renderIcon({\n        style: {\n          color: palette.text.primary,\n        },\n        size: 25,\n      })}\n      <a\n        href={link}\n        className=\"project-link\"\n        style={{ color: palette.primary.main }}\n      >\n        {link}\n      </a>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Card from \"../../../components/Card\";\nimport ImageGallery from \"./ImageGallery\";\nimport { GoDeviceMobile } from \"react-icons/go\";\nimport { FiGithub, FiHome } from \"react-icons/fi\";\nimport ProjectLink from \"./ProjectLink\";\nimport { Project } from \"../../../types\";\n\ninterface Props {\n  project: Project;\n  setSelectedProject: (project: any) => void;\n}\n\nexport default ({ project, setSelectedProject }: Props) => {\n  const { title, description, github, store, emulator, images } = project;\n  return (\n    <Card className=\"project-tile-card\">\n      <ImageGallery\n        {...{ images }}\n        setSelectedProject={() => setSelectedProject(project)}\n      />\n\n      <h2 className=\"project-title\" onClick={() => setSelectedProject(project)}>\n        {title}\n      </h2>\n      <div className=\"project-description\">{description}</div>\n      <div className=\"project-source-links\">\n        <ProjectLink\n          link={github}\n          renderIcon={(iconProps) => <FiGithub {...iconProps} />}\n        />\n        {emulator && (\n          <ProjectLink\n            link={emulator}\n            renderIcon={(iconProps) => <GoDeviceMobile {...iconProps} />}\n          />\n        )}\n        {store && (\n          <ProjectLink\n            link={store}\n            renderIcon={(iconProps) => <FiHome {...iconProps} />}\n          />\n        )}\n      </div>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Modal, IconButton, useTheme } from \"@material-ui/core\";\nimport ImageGallery from \"./ImageGallery\";\nimport { Project } from \"../../../types\";\nimport { animated, useSpring } from \"react-spring\";\nimport { GoX } from \"react-icons/go\";\n\ninterface Props {\n  selected: Project | null;\n  exit: () => void;\n}\n\nexport default ({ selected, exit }) => {\n  const { palette } = useTheme();\n  const { opacity } = useSpring({\n    opacity: Boolean(selected) ? 1 : 0,\n    config: {\n      duration: 300,\n    },\n  });\n  const opacityTransform = opacity.interpolate({\n    range: [0, 1],\n    output: [0, 1],\n  });\n\n  return (\n    <Modal open={selected !== null}>\n      <animated.div\n        className=\"project-preview-container\"\n        style={{ opacity: opacityTransform }}\n      >\n        {selected && <ImageGallery images={selected.images} selected />}\n        <IconButton onClick={() => exit()} classes={{ root: \"preview-exit\" }}>\n          <GoX color={palette.text.secondary} size={50} />\n        </IconButton>\n      </animated.div>\n    </Modal>\n  );\n};\n","import React, { useState, useLayoutEffect } from \"react\";\nimport ProjectTile from \"./ProjectTile\";\nimport \"../style.css\";\nimport ProjectPreview from \"./ProjectPreview\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectProjects, fetchProjects } from \"../../../slices/appSlice\";\nimport Loading from \"../../../components/Loading\";\n\nexport default () => {\n  const [selectedProject, setSelectedProject] = useState(null);\n  const dispatch = useDispatch();\n  useLayoutEffect(() => {\n    dispatch(fetchProjects());\n  }, [dispatch]);\n  const projects = useSelector(selectProjects);\n  if (projects) {\n    return (\n      <div className=\"projects-grid\">\n        {projects.map((current) => (\n          <ProjectTile\n            key={`project${current.id}`}\n            project={current}\n            {...{ setSelectedProject }}\n          />\n        ))}\n        <ProjectPreview\n          selected={selectedProject}\n          exit={() => setSelectedProject(null)}\n        />\n      </div>\n    );\n  } else return <Loading />;\n};\n","import React from \"react\";\nimport Container from \"../../components/Container\";\nimport ProjectsGrid from \"./components/ProjectsGrid\";\nimport { SCREEN_TRANSITION_CONFIG } from \"../../globals\";\nimport { useSpring, animated } from \"react-spring\";\n\nexport default () => {\n  const animationProps = useSpring(SCREEN_TRANSITION_CONFIG);\n  return (\n    <animated.div style={animationProps}>\n      <Container>\n        <h1>Projects</h1>\n        <Container>\n          <ProjectsGrid />\n        </Container>\n      </Container>\n    </animated.div>\n  );\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store, { persistedStore } from \"./store\";\nimport Main from \"./screens/Main\";\nimport { MAIN, EXP, SKILLS, PROJECTS } from \"./navRoutes\";\n\nimport Navigation from \"./components/Navigation\";\nimport ThemeProvider from \"./ThemeProvider\";\nimport Experience from \"./screens/Experience\";\nimport Skills from \"./screens/Skills\";\nimport Projects from \"./screens/Projects\";\n\nexport default () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistedStore}>\n        <ThemeProvider>\n          <Router>\n            <Navigation />\n            <Switch>\n              <Route exact path={EXP} component={Experience} />\n              <Route exact path={MAIN} component={Main} />\n              <Route exact path={SKILLS} component={Skills} />\n              <Route exact path={PROJECTS} component={Projects} />\n            </Switch>\n          </Router>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}